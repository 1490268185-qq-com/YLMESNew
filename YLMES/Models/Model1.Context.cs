//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YLMES.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class YLMES_newEntities : DbContext
    {
        public YLMES_newEntities()
            : base("name=YLMES_newEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_Contract> C_Contract { get; set; }
        public virtual DbSet<C_Contract_Receivables> C_Contract_Receivables { get; set; }
        public virtual DbSet<C_Contract_ReceivablesHistory> C_Contract_ReceivablesHistory { get; set; }
        public virtual DbSet<C_ContractDeliveryHistory> C_ContractDeliveryHistory { get; set; }
        public virtual DbSet<C_ContractInstallationHistory> C_ContractInstallationHistory { get; set; }
        public virtual DbSet<C_ContractProductDetail> C_ContractProductDetail { get; set; }
        public virtual DbSet<Category1> Category1 { get; set; }
        public virtual DbSet<Category2> Category2 { get; set; }
        public virtual DbSet<Category3> Category3 { get; set; }
        public virtual DbSet<ContractType> ContractType { get; set; }
        public virtual DbSet<Employee__dele> Employee__dele { get; set; }
        public virtual DbSet<htmltext> htmltext { get; set; }
        public virtual DbSet<PM_ApplierList> PM_ApplierList { get; set; }
        public virtual DbSet<PM_ApplierProductType> PM_ApplierProductType { get; set; }
        public virtual DbSet<PM_AssemblyPart> PM_AssemblyPart { get; set; }
        public virtual DbSet<PM_BOM> PM_BOM { get; set; }
        public virtual DbSet<PM_BOM_Process> PM_BOM_Process { get; set; }
        public virtual DbSet<PM_DepartMent> PM_DepartMent { get; set; }
        public virtual DbSet<PM_FactorySetting> PM_FactorySetting { get; set; }
        public virtual DbSet<PM_Figure> PM_Figure { get; set; }
        public virtual DbSet<PM_Figure_history> PM_Figure_history { get; set; }
        public virtual DbSet<PM_FunctionList> PM_FunctionList { get; set; }
        public virtual DbSet<PM_Material> PM_Material { get; set; }
        public virtual DbSet<PM_Material_temp> PM_Material_temp { get; set; }
        public virtual DbSet<PM_MaterialList> PM_MaterialList { get; set; }
        public virtual DbSet<PM_MaterialList_new> PM_MaterialList_new { get; set; }
        public virtual DbSet<PM_MaterialListByProject> PM_MaterialListByProject { get; set; }
        public virtual DbSet<PM_PONO> PM_PONO { get; set; }
        public virtual DbSet<PM_Product> PM_Product { get; set; }
        public virtual DbSet<PM_ProductLine> PM_ProductLine { get; set; }
        public virtual DbSet<PM_ProductNameMappingPart> PM_ProductNameMappingPart { get; set; }
        public virtual DbSet<PM_ProductRouting> PM_ProductRouting { get; set; }
        public virtual DbSet<PM_ProductStation> PM_ProductStation { get; set; }
        public virtual DbSet<PM_ProductStationType> PM_ProductStationType { get; set; }
        public virtual DbSet<PM_PurchaseMaterialList_temp> PM_PurchaseMaterialList_temp { get; set; }
        public virtual DbSet<PM_Route> PM_Route { get; set; }
        public virtual DbSet<PM_ScoreSetting> PM_ScoreSetting { get; set; }
        public virtual DbSet<PM_TaskRoute> PM_TaskRoute { get; set; }
        public virtual DbSet<PM_UserAccessSetup> PM_UserAccessSetup { get; set; }
        public virtual DbSet<PM_WH> PM_WH { get; set; }
        public virtual DbSet<PM_WHArea> PM_WHArea { get; set; }
        public virtual DbSet<PM_WHGoodsAllocation> PM_WHGoodsAllocation { get; set; }
        public virtual DbSet<PM_WHStorageLocation> PM_WHStorageLocation { get; set; }
        public virtual DbSet<PM_WorkOrder> PM_WorkOrder { get; set; }
        public virtual DbSet<PM_WorkorderDetail> PM_WorkorderDetail { get; set; }
        public virtual DbSet<PM_WorkStationDetail> PM_WorkStationDetail { get; set; }
        public virtual DbSet<PM_WorkStationDetailHistory> PM_WorkStationDetailHistory { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tttb> tttb { get; set; }
        public virtual DbSet<ac> ac { get; set; }
        public virtual DbSet<DeletePM_WorkDetailHistory> DeletePM_WorkDetailHistory { get; set; }
        public virtual DbSet<EmployeeWorkReport> EmployeeWorkReport { get; set; }
        public virtual DbSet<MaterialCategory> MaterialCategory { get; set; }
        public virtual DbSet<PaymentType> PaymentType { get; set; }
        public virtual DbSet<PM_Assembly_setting> PM_Assembly_setting { get; set; }
        public virtual DbSet<PM_Bonusratio> PM_Bonusratio { get; set; }
        public virtual DbSet<PM_Customer> PM_Customer { get; set; }
        public virtual DbSet<PM_DepartmentSubsector> PM_DepartmentSubsector { get; set; }
        public virtual DbSet<PM_DepartRouting> PM_DepartRouting { get; set; }
        public virtual DbSet<PM_FinshGoodsLocation> PM_FinshGoodsLocation { get; set; }
        public virtual DbSet<PM_Package> PM_Package { get; set; }
        public virtual DbSet<PM_PartSetting_temp> PM_PartSetting_temp { get; set; }
        public virtual DbSet<PM_ProblemDiscussion> PM_ProblemDiscussion { get; set; }
        public virtual DbSet<PM_PullingList> PM_PullingList { get; set; }
        public virtual DbSet<PM_PullingListHistory> PM_PullingListHistory { get; set; }
        public virtual DbSet<PM_PurchaseMaterialList> PM_PurchaseMaterialList { get; set; }
        public virtual DbSet<PM_ShipNotice> PM_ShipNotice { get; set; }
        public virtual DbSet<PM_ShipNoticeDetail> PM_ShipNoticeDetail { get; set; }
        public virtual DbSet<PM_StockCount> PM_StockCount { get; set; }
        public virtual DbSet<PM_StockCountDetail> PM_StockCountDetail { get; set; }
        public virtual DbSet<PM_Task> PM_Task { get; set; }
        public virtual DbSet<PM_Task_History_Status> PM_Task_History_Status { get; set; }
        public virtual DbSet<PM_TaskCircle> PM_TaskCircle { get; set; }
        public virtual DbSet<PM_TaskProgress> PM_TaskProgress { get; set; }
        public virtual DbSet<PM_TaskType> PM_TaskType { get; set; }
        public virtual DbSet<TableStatus> TableStatus { get; set; }
        public virtual DbSet<temp1121> temp1121 { get; set; }
        public virtual DbSet<toji> toji { get; set; }
    
        [DbFunction("YLMES_newEntities", "StrToTable")]
        public virtual IQueryable<StrToTable_Result> StrToTable(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StrToTable_Result>("[YLMES_newEntities].[StrToTable](@str)", strParameter);
        }
    
        public virtual int AddchildThing(string partNumber, Nullable<int> childPartID, string createdBy)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var childPartIDParameter = childPartID.HasValue ?
                new ObjectParameter("ChildPartID", childPartID) :
                new ObjectParameter("ChildPartID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddchildThing", partNumberParameter, childPartIDParameter, createdByParameter);
        }
    
        public virtual int AddLocationType(string createdBy)
        {
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddLocationType", createdByParameter);
        }
    
        public virtual int AddMerial(string level, string figureNumber, string partNumber, string partSpec, string partMaterial, string qTY, string note, string listType, Nullable<int> taskID)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var qTYParameter = qTY != null ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMerial", levelParameter, figureNumberParameter, partNumberParameter, partSpecParameter, partMaterialParameter, qTYParameter, noteParameter, listTypeParameter, taskIDParameter);
        }
    
        public virtual int AddPM_MaterialList(string materialID, string figureNumber, string inQTY, string location, string createdBy)
        {
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("figureNumber", figureNumber) :
                new ObjectParameter("figureNumber", typeof(string));
    
            var inQTYParameter = inQTY != null ?
                new ObjectParameter("InQTY", inQTY) :
                new ObjectParameter("InQTY", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPM_MaterialList", materialIDParameter, figureNumberParameter, inQTYParameter, locationParameter, createdByParameter);
        }
    
        public virtual int AddProcessBOM(string partNumber, string partSpec, string createdBy)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProcessBOM", partNumberParameter, partSpecParameter, createdByParameter);
        }
    
        public virtual int AddRoute(Nullable<int> route, string createdBy)
        {
            var routeParameter = route.HasValue ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRoute", routeParameter, createdByParameter);
        }
    
        public virtual int AddWH(string tYPE, Nullable<int> wHID, Nullable<int> wHAreaID, Nullable<int> wHStorageLocationID, string createdBy)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var wHIDParameter = wHID.HasValue ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(int));
    
            var wHAreaIDParameter = wHAreaID.HasValue ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(int));
    
            var wHStorageLocationIDParameter = wHStorageLocationID.HasValue ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddWH", tYPEParameter, wHIDParameter, wHAreaIDParameter, wHStorageLocationIDParameter, createdByParameter);
        }
    
        public virtual int AddWork(string partNumber, Nullable<int> totalPCS, Nullable<int> qTYofOneSet, Nullable<int> totalQTY, Nullable<int> taskID, string parentPartNumber, string dueDay, string createdEmployee, string spec, string ji, string cSpec)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var totalPCSParameter = totalPCS.HasValue ?
                new ObjectParameter("TotalPCS", totalPCS) :
                new ObjectParameter("TotalPCS", typeof(int));
    
            var qTYofOneSetParameter = qTYofOneSet.HasValue ?
                new ObjectParameter("QTYofOneSet", qTYofOneSet) :
                new ObjectParameter("QTYofOneSet", typeof(int));
    
            var totalQTYParameter = totalQTY.HasValue ?
                new ObjectParameter("TotalQTY", totalQTY) :
                new ObjectParameter("TotalQTY", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var parentPartNumberParameter = parentPartNumber != null ?
                new ObjectParameter("ParentPartNumber", parentPartNumber) :
                new ObjectParameter("ParentPartNumber", typeof(string));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            var createdEmployeeParameter = createdEmployee != null ?
                new ObjectParameter("CreatedEmployee", createdEmployee) :
                new ObjectParameter("CreatedEmployee", typeof(string));
    
            var specParameter = spec != null ?
                new ObjectParameter("Spec", spec) :
                new ObjectParameter("Spec", typeof(string));
    
            var jiParameter = ji != null ?
                new ObjectParameter("Ji", ji) :
                new ObjectParameter("Ji", typeof(string));
    
            var cSpecParameter = cSpec != null ?
                new ObjectParameter("cSpec", cSpec) :
                new ObjectParameter("cSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddWork", partNumberParameter, totalPCSParameter, qTYofOneSetParameter, totalQTYParameter, taskIDParameter, parentPartNumberParameter, dueDayParameter, createdEmployeeParameter, specParameter, jiParameter, cSpecParameter);
        }
    
        public virtual ObjectResult<string> ApplierList_getlist(string type, string name)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ApplierList_getlist", typeParameter, nameParameter);
        }
    
        public virtual ObjectResult<ApplierList_getName_Result> ApplierList_getName(string type, string category)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApplierList_getName_Result>("ApplierList_getName", typeParameter, categoryParameter);
        }
    
        public virtual ObjectResult<ApplierList_Supplier_Result> ApplierList_Supplier(string type, Nullable<int> applierID, string applierName, string address, string contact, string tel, string mobile, string category, string level, string advantage, string note, string fax, string createdBy, string principal, string representative, string account, string bank, string status)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var applierIDParameter = applierID.HasValue ?
                new ObjectParameter("ApplierID", applierID) :
                new ObjectParameter("ApplierID", typeof(int));
    
            var applierNameParameter = applierName != null ?
                new ObjectParameter("ApplierName", applierName) :
                new ObjectParameter("ApplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var advantageParameter = advantage != null ?
                new ObjectParameter("Advantage", advantage) :
                new ObjectParameter("Advantage", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var principalParameter = principal != null ?
                new ObjectParameter("Principal", principal) :
                new ObjectParameter("Principal", typeof(string));
    
            var representativeParameter = representative != null ?
                new ObjectParameter("Representative", representative) :
                new ObjectParameter("Representative", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApplierList_Supplier_Result>("ApplierList_Supplier", typeParameter, applierIDParameter, applierNameParameter, addressParameter, contactParameter, telParameter, mobileParameter, categoryParameter, levelParameter, advantageParameter, noteParameter, faxParameter, createdByParameter, principalParameter, representativeParameter, accountParameter, bankParameter, statusParameter);
        }
    
        public virtual int AutoCheckDeposit(Nullable<int> contractID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCheckDeposit", contractIDParameter);
        }
    
        public virtual ObjectResult<checkBOM_Result> checkBOM(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkBOM_Result>("checkBOM", taskIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckCategory(string type, string partNumber, string partSpec)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckCategory", typeParameter, partNumberParameter, partSpecParameter);
        }
    
        public virtual ObjectResult<checkCoMaterial_Result> checkCoMaterial(string name, string contractTypeId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var contractTypeIdParameter = contractTypeId != null ?
                new ObjectParameter("ContractTypeId", contractTypeId) :
                new ObjectParameter("ContractTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkCoMaterial_Result>("checkCoMaterial", nameParameter, contractTypeIdParameter);
        }
    
        public virtual ObjectResult<CheckCustomer_Result> CheckCustomer(string customerCode, string customerName, string contact, string createdTime)
        {
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var createdTimeParameter = createdTime != null ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckCustomer_Result>("CheckCustomer", customerCodeParameter, customerNameParameter, contactParameter, createdTimeParameter);
        }
    
        public virtual ObjectResult<CheckDaTypeChangeXiao_Result> CheckDaTypeChangeXiao(string da)
        {
            var daParameter = da != null ?
                new ObjectParameter("Da", da) :
                new ObjectParameter("Da", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDaTypeChangeXiao_Result>("CheckDaTypeChangeXiao", daParameter);
        }
    
        public virtual ObjectResult<CheckdCategory_Result> CheckdCategory(string type, string partNumber, string partSpec)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckdCategory_Result>("CheckdCategory", typeParameter, partNumberParameter, partSpecParameter);
        }
    
        public virtual ObjectResult<CheckDropAreaList_Result> CheckDropAreaList(string wHID, string wHAreaID)
        {
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDropAreaList_Result>("CheckDropAreaList", wHIDParameter, wHAreaIDParameter);
        }
    
        public virtual ObjectResult<CheckDropKwList_Result> CheckDropKwList(string wHID, string wHAreaID, string wHStorageLocationID)
        {
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            var wHStorageLocationIDParameter = wHStorageLocationID != null ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDropKwList_Result>("CheckDropKwList", wHIDParameter, wHAreaIDParameter, wHStorageLocationIDParameter);
        }
    
        public virtual ObjectResult<CheckDropWhList_Result> CheckDropWhList(string tYPE, string wHID, string wHAreaID, string wHStorageLocationID)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var wHAreaIDParameter = wHAreaID != null ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(string));
    
            var wHStorageLocationIDParameter = wHStorageLocationID != null ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDropWhList_Result>("CheckDropWhList", tYPEParameter, wHIDParameter, wHAreaIDParameter, wHStorageLocationIDParameter);
        }
    
        public virtual ObjectResult<CheckGoods_Result> CheckGoods(string wHArea, string wH, string wHStorageLocation, string wHGoodsAllocation)
        {
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            var wHStorageLocationParameter = wHStorageLocation != null ?
                new ObjectParameter("WHStorageLocation", wHStorageLocation) :
                new ObjectParameter("WHStorageLocation", typeof(string));
    
            var wHGoodsAllocationParameter = wHGoodsAllocation != null ?
                new ObjectParameter("WHGoodsAllocation", wHGoodsAllocation) :
                new ObjectParameter("WHGoodsAllocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckGoods_Result>("CheckGoods", wHAreaParameter, wHParameter, wHStorageLocationParameter, wHGoodsAllocationParameter);
        }
    
        public virtual ObjectResult<CheckMateial_Result> CheckMateial(string productName, string productSpec)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckMateial_Result>("CheckMateial", productNameParameter, productSpecParameter);
        }
    
        public virtual ObjectResult<CheckProcess_Result> CheckProcess(string type, string productName, string productSpec, string partNumber, string stationTypeNumber, string routeName, string require, string createdBy, Nullable<int> partId, string workSecondPerPCS, string workSecond2PerPCS)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var stationTypeNumberParameter = stationTypeNumber != null ?
                new ObjectParameter("StationTypeNumber", stationTypeNumber) :
                new ObjectParameter("StationTypeNumber", typeof(string));
    
            var routeNameParameter = routeName != null ?
                new ObjectParameter("RouteName", routeName) :
                new ObjectParameter("RouteName", typeof(string));
    
            var requireParameter = require != null ?
                new ObjectParameter("require", require) :
                new ObjectParameter("require", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var workSecondPerPCSParameter = workSecondPerPCS != null ?
                new ObjectParameter("WorkSecondPerPCS", workSecondPerPCS) :
                new ObjectParameter("WorkSecondPerPCS", typeof(string));
    
            var workSecond2PerPCSParameter = workSecond2PerPCS != null ?
                new ObjectParameter("WorkSecond2PerPCS", workSecond2PerPCS) :
                new ObjectParameter("WorkSecond2PerPCS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckProcess_Result>("CheckProcess", typeParameter, productNameParameter, productSpecParameter, partNumberParameter, stationTypeNumberParameter, routeNameParameter, requireParameter, createdByParameter, partIdParameter, workSecondPerPCSParameter, workSecond2PerPCSParameter);
        }
    
        public virtual ObjectResult<CheckRouteName_Result> CheckRouteName(string partNumber)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckRouteName_Result>("CheckRouteName", partNumberParameter);
        }
    
        public virtual ObjectResult<CheckSales_Result> CheckSales(string iD, string customerName, string contractNumber, string createdTimeStart, string createdTimeEnd, string statusID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart != null ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckSales_Result>("CheckSales", iDParameter, customerNameParameter, contractNumberParameter, createdTimeStartParameter, createdTimeEndParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<CheckStationType_Result> CheckStationType(string stationType)
        {
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckStationType_Result>("CheckStationType", stationTypeParameter);
        }
    
        public virtual ObjectResult<CheckStorage_Result> CheckStorage(string wHArea, string wH, string wHStorageLocation)
        {
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            var wHStorageLocationParameter = wHStorageLocation != null ?
                new ObjectParameter("WHStorageLocation", wHStorageLocation) :
                new ObjectParameter("WHStorageLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckStorage_Result>("CheckStorage", wHAreaParameter, wHParameter, wHStorageLocationParameter);
        }
    
        public virtual ObjectResult<CheckTask_Result> CheckTask(string type, string productName, string productSpec, string partNumber, string id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckTask_Result>("CheckTask", typeParameter, productNameParameter, productSpecParameter, partNumberParameter, idParameter);
        }
    
        public virtual ObjectResult<CheckTaskAll_Result> CheckTaskAll(string type, string productName, string productSpec, string partNumber)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckTaskAll_Result>("CheckTaskAll", typeParameter, productNameParameter, productSpecParameter, partNumberParameter);
        }
    
        public virtual ObjectResult<CheckTaskProgress_Result> CheckTaskProgress(Nullable<int> taskid)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("Taskid", taskid) :
                new ObjectParameter("Taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckTaskProgress_Result>("CheckTaskProgress", taskidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkUserName(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkUserName", userParameter);
        }
    
        public virtual ObjectResult<CheckWarehouse_Result> CheckWarehouse(string type, string wHArea, string wH)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckWarehouse_Result>("CheckWarehouse", typeParameter, wHAreaParameter, wHParameter);
        }
    
        public virtual ObjectResult<CheckWorkStation_Result> CheckWorkStation(string line, string workorderNO)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckWorkStation_Result>("CheckWorkStation", lineParameter, workorderNOParameter);
        }
    
        public virtual int CreateBOM(Nullable<int> taskID, string createdBy)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBOM", taskIDParameter, createdByParameter);
        }
    
        public virtual int DeleteAll(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAll", taskIDParameter);
        }
    
        public virtual int DeleteBOM(string partNumber, Nullable<int> iD)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBOM", partNumberParameter, iDParameter);
        }
    
        public virtual ObjectResult<DeleteLocationType_Result> DeleteLocationType(Nullable<int> stationTypeID, string stationType)
        {
            var stationTypeIDParameter = stationTypeID.HasValue ?
                new ObjectParameter("StationTypeID", stationTypeID) :
                new ObjectParameter("StationTypeID", typeof(int));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteLocationType_Result>("DeleteLocationType", stationTypeIDParameter, stationTypeParameter);
        }
    
        public virtual int DeletePM_WorkDetailHistorys(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePM_WorkDetailHistorys", idParameter);
        }
    
        public virtual int DeleteProcess(Nullable<int> iD, string rotueid)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var rotueidParameter = rotueid != null ?
                new ObjectParameter("Rotueid", rotueid) :
                new ObjectParameter("Rotueid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProcess", iDParameter, rotueidParameter);
        }
    
        public virtual ObjectResult<DeleteProcessBOM_Result> DeleteProcessBOM(Nullable<int> iD, string partNumber)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteProcessBOM_Result>("DeleteProcessBOM", iDParameter, partNumberParameter);
        }
    
        public virtual int DeleteTaskProgress(Nullable<int> taskID, Nullable<int> item)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTaskProgress", taskIDParameter, itemParameter);
        }
    
        public virtual int DeleteWH(string tYPE, Nullable<int> wHAreaID, Nullable<int> wHStorageLocationID, Nullable<int> wHGoodsAllocationID, ObjectParameter mSG)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var wHAreaIDParameter = wHAreaID.HasValue ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(int));
    
            var wHStorageLocationIDParameter = wHStorageLocationID.HasValue ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(int));
    
            var wHGoodsAllocationIDParameter = wHGoodsAllocationID.HasValue ?
                new ObjectParameter("WHGoodsAllocationID", wHGoodsAllocationID) :
                new ObjectParameter("WHGoodsAllocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWH", tYPEParameter, wHAreaIDParameter, wHStorageLocationIDParameter, wHGoodsAllocationIDParameter, mSG);
        }
    
        public virtual ObjectResult<DesignDistribution_Result> DesignDistribution(string projectName)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesignDistribution_Result>("DesignDistribution", projectNameParameter);
        }
    
        public virtual int DetailAdd(string type, string productName, string productSpec, string units, string count, string price, string contractID, string createdBy, Nullable<int> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var countParameter = count != null ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetailAdd", typeParameter, productNameParameter, productSpecParameter, unitsParameter, countParameter, priceParameter, contractIDParameter, createdByParameter, idParameter);
        }
    
        public virtual ObjectResult<EditAccessSetup_Result> EditAccessSetup(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditAccessSetup_Result>("EditAccessSetup", userNameParameter);
        }
    
        public virtual int EditLocationType(Nullable<int> stationTypeID, string stationTypeNumber, string stationType, string createdBy)
        {
            var stationTypeIDParameter = stationTypeID.HasValue ?
                new ObjectParameter("StationTypeID", stationTypeID) :
                new ObjectParameter("StationTypeID", typeof(int));
    
            var stationTypeNumberParameter = stationTypeNumber != null ?
                new ObjectParameter("StationTypeNumber", stationTypeNumber) :
                new ObjectParameter("StationTypeNumber", typeof(string));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditLocationType", stationTypeIDParameter, stationTypeNumberParameter, stationTypeParameter, createdByParameter);
        }
    
        public virtual int EditProcessBOM(Nullable<int> iD, string partNumber, string childPartQTY, string childPartNumber)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var childPartQTYParameter = childPartQTY != null ?
                new ObjectParameter("ChildPartQTY", childPartQTY) :
                new ObjectParameter("ChildPartQTY", typeof(string));
    
            var childPartNumberParameter = childPartNumber != null ?
                new ObjectParameter("ChildPartNumber", childPartNumber) :
                new ObjectParameter("ChildPartNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProcessBOM", iDParameter, partNumberParameter, childPartQTYParameter, childPartNumberParameter);
        }
    
        public virtual int EditWH(string tYPE, Nullable<int> iD, Nullable<int> wHID, string wH, string wHArea, string createdBy, string desc, string wHStorageLocation, string wHGoodsAllocation)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var wHIDParameter = wHID.HasValue ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(int));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var wHStorageLocationParameter = wHStorageLocation != null ?
                new ObjectParameter("WHStorageLocation", wHStorageLocation) :
                new ObjectParameter("WHStorageLocation", typeof(string));
    
            var wHGoodsAllocationParameter = wHGoodsAllocation != null ?
                new ObjectParameter("WHGoodsAllocation", wHGoodsAllocation) :
                new ObjectParameter("WHGoodsAllocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditWH", tYPEParameter, iDParameter, wHIDParameter, wHParameter, wHAreaParameter, createdByParameter, descParameter, wHStorageLocationParameter, wHGoodsAllocationParameter);
        }
    
        public virtual ObjectResult<Finished_stock_Result> Finished_stock(string customerName, string createdTime, string createdTimeEnd, string outgoingTime, string outgoingTimeEnd)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var createdTimeParameter = createdTime != null ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var outgoingTimeParameter = outgoingTime != null ?
                new ObjectParameter("OutgoingTime", outgoingTime) :
                new ObjectParameter("OutgoingTime", typeof(string));
    
            var outgoingTimeEndParameter = outgoingTimeEnd != null ?
                new ObjectParameter("OutgoingTimeEnd", outgoingTimeEnd) :
                new ObjectParameter("OutgoingTimeEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Finished_stock_Result>("Finished_stock", customerNameParameter, createdTimeParameter, createdTimeEndParameter, outgoingTimeParameter, outgoingTimeEndParameter);
        }
    
        public virtual int GenerateOrders(Nullable<int> taskID, string iDs, string listType)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateOrders", taskIDParameter, iDsParameter, listTypeParameter);
        }
    
        public virtual int GeneratPO(string iDs)
        {
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneratPO", iDsParameter);
        }
    
        public virtual ObjectResult<getPackjobs_Result> getPackjobs(string tYPE, string workorderNO)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackjobs_Result>("getPackjobs", tYPEParameter, workorderNOParameter);
        }
    
        public virtual int ImcommingPONotice(string pONO)
        {
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImcommingPONotice", pONOParameter);
        }
    
        public virtual ObjectResult<Install_check_Result> Install_check(Nullable<int> contractID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Install_check_Result>("Install_check", contractIDParameter);
        }
    
        public virtual int Install_update(Nullable<int> contractID, Nullable<int> productDetailID, string newInstalledQuantity, string completionDate, string acceptanceDate, string acceptance, string createdBy)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var newInstalledQuantityParameter = newInstalledQuantity != null ?
                new ObjectParameter("newInstalledQuantity", newInstalledQuantity) :
                new ObjectParameter("newInstalledQuantity", typeof(string));
    
            var completionDateParameter = completionDate != null ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(string));
    
            var acceptanceDateParameter = acceptanceDate != null ?
                new ObjectParameter("AcceptanceDate", acceptanceDate) :
                new ObjectParameter("AcceptanceDate", typeof(string));
    
            var acceptanceParameter = acceptance != null ?
                new ObjectParameter("Acceptance", acceptance) :
                new ObjectParameter("Acceptance", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Install_update", contractIDParameter, productDetailIDParameter, newInstalledQuantityParameter, completionDateParameter, acceptanceDateParameter, acceptanceParameter, createdByParameter);
        }
    
        public virtual ObjectResult<InstallHistory_check_Result> InstallHistory_check(Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InstallHistory_check_Result>("InstallHistory_check", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual int InstallHistory_delete(Nullable<int> contractID, Nullable<int> productDetailID, Nullable<int> historyID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("historyID", historyID) :
                new ObjectParameter("historyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InstallHistory_delete", contractIDParameter, productDetailIDParameter, historyIDParameter);
        }
    
        public virtual int InstallHistory_Update(string newInstalledQuantity, string completionDate, string acceptance, Nullable<System.DateTime> acceptanceDate, Nullable<int> contractID, Nullable<int> productDetailID, Nullable<int> historyID)
        {
            var newInstalledQuantityParameter = newInstalledQuantity != null ?
                new ObjectParameter("newInstalledQuantity", newInstalledQuantity) :
                new ObjectParameter("newInstalledQuantity", typeof(string));
    
            var completionDateParameter = completionDate != null ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(string));
    
            var acceptanceParameter = acceptance != null ?
                new ObjectParameter("Acceptance", acceptance) :
                new ObjectParameter("Acceptance", typeof(string));
    
            var acceptanceDateParameter = acceptanceDate.HasValue ?
                new ObjectParameter("AcceptanceDate", acceptanceDate) :
                new ObjectParameter("AcceptanceDate", typeof(System.DateTime));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("historyID", historyID) :
                new ObjectParameter("historyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InstallHistory_Update", newInstalledQuantityParameter, completionDateParameter, acceptanceParameter, acceptanceDateParameter, contractIDParameter, productDetailIDParameter, historyIDParameter);
        }
    
        public virtual ObjectResult<IwantMoreTask_Result> IwantMoreTask()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IwantMoreTask_Result>("IwantMoreTask");
        }
    
        public virtual ObjectResult<MyCompletedTaskCheck_Result> MyCompletedTaskCheck(string owner, string status, string startTime, string endTime, string projectName, string taskName)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MyCompletedTaskCheck_Result>("MyCompletedTaskCheck", ownerParameter, statusParameter, startTimeParameter, endTimeParameter, projectNameParameter, taskNameParameter);
        }
    
        public virtual ObjectResult<MyTaskCheck_Result> MyTaskCheck(string owner, string status)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MyTaskCheck_Result>("MyTaskCheck", ownerParameter, statusParameter);
        }
    
        public virtual ObjectResult<Permission_Result> Permission(string type, string userName, string functionName, Nullable<int> status)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var functionNameParameter = functionName != null ?
                new ObjectParameter("FunctionName", functionName) :
                new ObjectParameter("FunctionName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Permission_Result>("Permission", typeParameter, userNameParameter, functionNameParameter, statusParameter);
        }
    
        public virtual int PicKing(Nullable<int> outPCS, Nullable<int> outQTY, Nullable<int> pOID, Nullable<int> materialID, string status)
        {
            var outPCSParameter = outPCS.HasValue ?
                new ObjectParameter("OutPCS", outPCS) :
                new ObjectParameter("OutPCS", typeof(int));
    
            var outQTYParameter = outQTY.HasValue ?
                new ObjectParameter("OutQTY", outQTY) :
                new ObjectParameter("OutQTY", typeof(int));
    
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PicKing", outPCSParameter, outQTYParameter, pOIDParameter, materialIDParameter, statusParameter);
        }
    
        public virtual int PM_AddCustomer(string type, Nullable<int> id, string customerCode, string customerName, string address, string tel, string contact, string bank, string account, string representative, string principal, string createdBy)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var representativeParameter = representative != null ?
                new ObjectParameter("Representative", representative) :
                new ObjectParameter("Representative", typeof(string));
    
            var principalParameter = principal != null ?
                new ObjectParameter("Principal", principal) :
                new ObjectParameter("Principal", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_AddCustomer", typeParameter, idParameter, customerCodeParameter, customerNameParameter, addressParameter, telParameter, contactParameter, bankParameter, accountParameter, representativeParameter, principalParameter, createdByParameter);
        }
    
        public virtual int PM_AddPurld(Nullable<int> taskID, Nullable<int> materialID, Nullable<int> applyPCS, Nullable<int> applyQTY, Nullable<int> qtyofPCS)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var applyPCSParameter = applyPCS.HasValue ?
                new ObjectParameter("ApplyPCS", applyPCS) :
                new ObjectParameter("ApplyPCS", typeof(int));
    
            var applyQTYParameter = applyQTY.HasValue ?
                new ObjectParameter("ApplyQTY", applyQTY) :
                new ObjectParameter("ApplyQTY", typeof(int));
    
            var qtyofPCSParameter = qtyofPCS.HasValue ?
                new ObjectParameter("qtyofPCS", qtyofPCS) :
                new ObjectParameter("qtyofPCS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_AddPurld", taskIDParameter, materialIDParameter, applyPCSParameter, applyQTYParameter, qtyofPCSParameter);
        }
    
        public virtual int PM_AddPurlist(Nullable<int> taskID, string material, string partSpec, string partMaterial, Nullable<int> applyPCS, Nullable<int> qtyofPCS, string listType, string units, string note, string userName)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var materialParameter = material != null ?
                new ObjectParameter("Material", material) :
                new ObjectParameter("Material", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var applyPCSParameter = applyPCS.HasValue ?
                new ObjectParameter("ApplyPCS", applyPCS) :
                new ObjectParameter("ApplyPCS", typeof(int));
    
            var qtyofPCSParameter = qtyofPCS.HasValue ?
                new ObjectParameter("qtyofPCS", qtyofPCS) :
                new ObjectParameter("qtyofPCS", typeof(int));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_AddPurlist", taskIDParameter, materialParameter, partSpecParameter, partMaterialParameter, applyPCSParameter, qtyofPCSParameter, listTypeParameter, unitsParameter, noteParameter, userNameParameter);
        }
    
        public virtual ObjectResult<PM_AssignTasksCheck_Result> PM_AssignTasksCheck(string rwapStatusID, string createdTimeStart, string salesOrder, string projectName, string statusID)
        {
            var rwapStatusIDParameter = rwapStatusID != null ?
                new ObjectParameter("RwapStatusID", rwapStatusID) :
                new ObjectParameter("RwapStatusID", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart != null ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(string));
    
            var salesOrderParameter = salesOrder != null ?
                new ObjectParameter("SalesOrder", salesOrder) :
                new ObjectParameter("SalesOrder", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PM_AssignTasksCheck_Result>("PM_AssignTasksCheck", rwapStatusIDParameter, createdTimeStartParameter, salesOrderParameter, projectNameParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<PM_EditAccessSetup_Result> PM_EditAccessSetup(string type, string userName, string functionName, Nullable<int> status, Nullable<int> typeid)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var functionNameParameter = functionName != null ?
                new ObjectParameter("FunctionName", functionName) :
                new ObjectParameter("FunctionName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var typeidParameter = typeid.HasValue ?
                new ObjectParameter("typeid", typeid) :
                new ObjectParameter("typeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PM_EditAccessSetup_Result>("PM_EditAccessSetup", typeParameter, userNameParameter, functionNameParameter, statusParameter, typeidParameter);
        }
    
        public virtual ObjectResult<PM_ProjectCheckTask2_Result> PM_ProjectCheckTask2(string type, string projectName)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PM_ProjectCheckTask2_Result>("PM_ProjectCheckTask2", typeParameter, projectNameParameter);
        }
    
        public virtual int PM_ProjectEdit(string type, Nullable<int> projectID, string projectName, string createdBy, string desc, Nullable<System.DateTime> createdTimeStart, Nullable<System.DateTime> createdTimeEnd, Nullable<System.DateTime> completedTimeStart, Nullable<System.DateTime> completedTimeEnd, string salesOrder, Nullable<int> statusID, string rwapStatusID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart.HasValue ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(System.DateTime));
    
            var createdTimeEndParameter = createdTimeEnd.HasValue ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(System.DateTime));
    
            var completedTimeStartParameter = completedTimeStart.HasValue ?
                new ObjectParameter("CompletedTimeStart", completedTimeStart) :
                new ObjectParameter("CompletedTimeStart", typeof(System.DateTime));
    
            var completedTimeEndParameter = completedTimeEnd.HasValue ?
                new ObjectParameter("CompletedTimeEnd", completedTimeEnd) :
                new ObjectParameter("CompletedTimeEnd", typeof(System.DateTime));
    
            var salesOrderParameter = salesOrder != null ?
                new ObjectParameter("SalesOrder", salesOrder) :
                new ObjectParameter("SalesOrder", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var rwapStatusIDParameter = rwapStatusID != null ?
                new ObjectParameter("RwapStatusID", rwapStatusID) :
                new ObjectParameter("RwapStatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_ProjectEdit", typeParameter, projectIDParameter, projectNameParameter, createdByParameter, descParameter, createdTimeStartParameter, createdTimeEndParameter, completedTimeStartParameter, completedTimeEndParameter, salesOrderParameter, statusIDParameter, rwapStatusIDParameter);
        }
    
        public virtual int PM_ProjectStatistics(string type, string projectName, string owner, string overduday, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string depart)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var overdudayParameter = overduday != null ?
                new ObjectParameter("Overduday", overduday) :
                new ObjectParameter("Overduday", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var departParameter = depart != null ?
                new ObjectParameter("Depart", depart) :
                new ObjectParameter("Depart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_ProjectStatistics", typeParameter, projectNameParameter, ownerParameter, overdudayParameter, startTimeParameter, endTimeParameter, departParameter);
        }
    
        public virtual ObjectResult<PM_TaskDetailEdit_Result> PM_TaskDetailEdit(string type, Nullable<int> taskDetailID, string station, string stationType, string @operator, Nullable<double> finishQTY, Nullable<double> failQTY, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string createdBy)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var taskDetailIDParameter = taskDetailID.HasValue ?
                new ObjectParameter("TaskDetailID", taskDetailID) :
                new ObjectParameter("TaskDetailID", typeof(int));
    
            var stationParameter = station != null ?
                new ObjectParameter("Station", station) :
                new ObjectParameter("Station", typeof(string));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var finishQTYParameter = finishQTY.HasValue ?
                new ObjectParameter("FinishQTY", finishQTY) :
                new ObjectParameter("FinishQTY", typeof(double));
    
            var failQTYParameter = failQTY.HasValue ?
                new ObjectParameter("FailQTY", failQTY) :
                new ObjectParameter("FailQTY", typeof(double));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PM_TaskDetailEdit_Result>("PM_TaskDetailEdit", typeParameter, taskDetailIDParameter, stationParameter, stationTypeParameter, operatorParameter, finishQTYParameter, failQTYParameter, startTimeParameter, endTimeParameter, createdByParameter);
        }
    
        public virtual ObjectResult<string> PM_TaskEdit(string type, Nullable<int> taskID, Nullable<int> parentTaskID, string projectName, string priorityCode, Nullable<int> taskLevel, string taskName, string taskType, string productName, string productSpec, string owner, Nullable<double> taskScore, Nullable<System.DateTime> dueDay, string taskDesc, string taskFile1, string taskFile2, string taskFile3, string machineDesignOwner, Nullable<double> machineDesignBaseTime, string machineDesignConfirm, Nullable<System.DateTime> machineDesignConfirmTime, string machineDesignifCompleted, Nullable<System.DateTime> machineDesignCompletedTime, Nullable<double> machineDesignBaseScore, Nullable<double> machineDesignScore, string machineDesignFileName1, string machineDesignFileName2, string electricalOwner, Nullable<double> electricalDesignBaseTime, string electricalDesignConfirm, Nullable<System.DateTime> electricalDesignConfirmTime, string electricalDesignifCompleted, Nullable<System.DateTime> electricalDesignCompletedTime, Nullable<double> electricalDesignBaseScore, Nullable<double> electricalDesignScore, string electricalDesignFileName1, string electricalDesignFileName2, string qualifiedOwner, Nullable<double> qualifiedBaseTime, string qualifiedConfirm, Nullable<System.DateTime> qualifiedConfirmTime, string qualifiedifCompleted, Nullable<System.DateTime> qualifiedCompletedTime, Nullable<double> qualifiedBaseScore, Nullable<double> qualifiedScore, string issueOwner, Nullable<double> issueBaseTime, string issueConfirm, Nullable<System.DateTime> issueConfirmTime, string issueifCompleted, Nullable<System.DateTime> issueCompletedTime, Nullable<double> issueBaseScore, Nullable<double> issueScore, Nullable<double> lastTaskTotalScore, string status, string productFileName1, string productFileName2, string productFileName3, string productFileName4, string note, string ifOverdue, string cDSD, string xZSD, string zDZZ, string eDGL, string lGGG, string gZYL, string yYY, string ifDrive, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string createdBy, Nullable<int> projectID2, Nullable<int> productDetailID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var parentTaskIDParameter = parentTaskID.HasValue ?
                new ObjectParameter("ParentTaskID", parentTaskID) :
                new ObjectParameter("ParentTaskID", typeof(int));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var priorityCodeParameter = priorityCode != null ?
                new ObjectParameter("PriorityCode", priorityCode) :
                new ObjectParameter("PriorityCode", typeof(string));
    
            var taskLevelParameter = taskLevel.HasValue ?
                new ObjectParameter("TaskLevel", taskLevel) :
                new ObjectParameter("TaskLevel", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskTypeParameter = taskType != null ?
                new ObjectParameter("TaskType", taskType) :
                new ObjectParameter("TaskType", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var taskScoreParameter = taskScore.HasValue ?
                new ObjectParameter("TaskScore", taskScore) :
                new ObjectParameter("TaskScore", typeof(double));
    
            var dueDayParameter = dueDay.HasValue ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(System.DateTime));
    
            var taskDescParameter = taskDesc != null ?
                new ObjectParameter("TaskDesc", taskDesc) :
                new ObjectParameter("TaskDesc", typeof(string));
    
            var taskFile1Parameter = taskFile1 != null ?
                new ObjectParameter("TaskFile1", taskFile1) :
                new ObjectParameter("TaskFile1", typeof(string));
    
            var taskFile2Parameter = taskFile2 != null ?
                new ObjectParameter("TaskFile2", taskFile2) :
                new ObjectParameter("TaskFile2", typeof(string));
    
            var taskFile3Parameter = taskFile3 != null ?
                new ObjectParameter("TaskFile3", taskFile3) :
                new ObjectParameter("TaskFile3", typeof(string));
    
            var machineDesignOwnerParameter = machineDesignOwner != null ?
                new ObjectParameter("MachineDesignOwner", machineDesignOwner) :
                new ObjectParameter("MachineDesignOwner", typeof(string));
    
            var machineDesignBaseTimeParameter = machineDesignBaseTime.HasValue ?
                new ObjectParameter("MachineDesignBaseTime", machineDesignBaseTime) :
                new ObjectParameter("MachineDesignBaseTime", typeof(double));
    
            var machineDesignConfirmParameter = machineDesignConfirm != null ?
                new ObjectParameter("MachineDesignConfirm", machineDesignConfirm) :
                new ObjectParameter("MachineDesignConfirm", typeof(string));
    
            var machineDesignConfirmTimeParameter = machineDesignConfirmTime.HasValue ?
                new ObjectParameter("MachineDesignConfirmTime", machineDesignConfirmTime) :
                new ObjectParameter("MachineDesignConfirmTime", typeof(System.DateTime));
    
            var machineDesignifCompletedParameter = machineDesignifCompleted != null ?
                new ObjectParameter("MachineDesignifCompleted", machineDesignifCompleted) :
                new ObjectParameter("MachineDesignifCompleted", typeof(string));
    
            var machineDesignCompletedTimeParameter = machineDesignCompletedTime.HasValue ?
                new ObjectParameter("MachineDesignCompletedTime", machineDesignCompletedTime) :
                new ObjectParameter("MachineDesignCompletedTime", typeof(System.DateTime));
    
            var machineDesignBaseScoreParameter = machineDesignBaseScore.HasValue ?
                new ObjectParameter("MachineDesignBaseScore", machineDesignBaseScore) :
                new ObjectParameter("MachineDesignBaseScore", typeof(double));
    
            var machineDesignScoreParameter = machineDesignScore.HasValue ?
                new ObjectParameter("MachineDesignScore", machineDesignScore) :
                new ObjectParameter("MachineDesignScore", typeof(double));
    
            var machineDesignFileName1Parameter = machineDesignFileName1 != null ?
                new ObjectParameter("MachineDesignFileName1", machineDesignFileName1) :
                new ObjectParameter("MachineDesignFileName1", typeof(string));
    
            var machineDesignFileName2Parameter = machineDesignFileName2 != null ?
                new ObjectParameter("MachineDesignFileName2", machineDesignFileName2) :
                new ObjectParameter("MachineDesignFileName2", typeof(string));
    
            var electricalOwnerParameter = electricalOwner != null ?
                new ObjectParameter("electricalOwner", electricalOwner) :
                new ObjectParameter("electricalOwner", typeof(string));
    
            var electricalDesignBaseTimeParameter = electricalDesignBaseTime.HasValue ?
                new ObjectParameter("electricalDesignBaseTime", electricalDesignBaseTime) :
                new ObjectParameter("electricalDesignBaseTime", typeof(double));
    
            var electricalDesignConfirmParameter = electricalDesignConfirm != null ?
                new ObjectParameter("electricalDesignConfirm", electricalDesignConfirm) :
                new ObjectParameter("electricalDesignConfirm", typeof(string));
    
            var electricalDesignConfirmTimeParameter = electricalDesignConfirmTime.HasValue ?
                new ObjectParameter("electricalDesignConfirmTime", electricalDesignConfirmTime) :
                new ObjectParameter("electricalDesignConfirmTime", typeof(System.DateTime));
    
            var electricalDesignifCompletedParameter = electricalDesignifCompleted != null ?
                new ObjectParameter("electricalDesignifCompleted", electricalDesignifCompleted) :
                new ObjectParameter("electricalDesignifCompleted", typeof(string));
    
            var electricalDesignCompletedTimeParameter = electricalDesignCompletedTime.HasValue ?
                new ObjectParameter("electricalDesignCompletedTime", electricalDesignCompletedTime) :
                new ObjectParameter("electricalDesignCompletedTime", typeof(System.DateTime));
    
            var electricalDesignBaseScoreParameter = electricalDesignBaseScore.HasValue ?
                new ObjectParameter("electricalDesignBaseScore", electricalDesignBaseScore) :
                new ObjectParameter("electricalDesignBaseScore", typeof(double));
    
            var electricalDesignScoreParameter = electricalDesignScore.HasValue ?
                new ObjectParameter("electricalDesignScore", electricalDesignScore) :
                new ObjectParameter("electricalDesignScore", typeof(double));
    
            var electricalDesignFileName1Parameter = electricalDesignFileName1 != null ?
                new ObjectParameter("electricalDesignFileName1", electricalDesignFileName1) :
                new ObjectParameter("electricalDesignFileName1", typeof(string));
    
            var electricalDesignFileName2Parameter = electricalDesignFileName2 != null ?
                new ObjectParameter("electricalDesignFileName2", electricalDesignFileName2) :
                new ObjectParameter("electricalDesignFileName2", typeof(string));
    
            var qualifiedOwnerParameter = qualifiedOwner != null ?
                new ObjectParameter("QualifiedOwner", qualifiedOwner) :
                new ObjectParameter("QualifiedOwner", typeof(string));
    
            var qualifiedBaseTimeParameter = qualifiedBaseTime.HasValue ?
                new ObjectParameter("QualifiedBaseTime", qualifiedBaseTime) :
                new ObjectParameter("QualifiedBaseTime", typeof(double));
    
            var qualifiedConfirmParameter = qualifiedConfirm != null ?
                new ObjectParameter("QualifiedConfirm", qualifiedConfirm) :
                new ObjectParameter("QualifiedConfirm", typeof(string));
    
            var qualifiedConfirmTimeParameter = qualifiedConfirmTime.HasValue ?
                new ObjectParameter("QualifiedConfirmTime", qualifiedConfirmTime) :
                new ObjectParameter("QualifiedConfirmTime", typeof(System.DateTime));
    
            var qualifiedifCompletedParameter = qualifiedifCompleted != null ?
                new ObjectParameter("QualifiedifCompleted", qualifiedifCompleted) :
                new ObjectParameter("QualifiedifCompleted", typeof(string));
    
            var qualifiedCompletedTimeParameter = qualifiedCompletedTime.HasValue ?
                new ObjectParameter("QualifiedCompletedTime", qualifiedCompletedTime) :
                new ObjectParameter("QualifiedCompletedTime", typeof(System.DateTime));
    
            var qualifiedBaseScoreParameter = qualifiedBaseScore.HasValue ?
                new ObjectParameter("QualifiedBaseScore", qualifiedBaseScore) :
                new ObjectParameter("QualifiedBaseScore", typeof(double));
    
            var qualifiedScoreParameter = qualifiedScore.HasValue ?
                new ObjectParameter("QualifiedScore", qualifiedScore) :
                new ObjectParameter("QualifiedScore", typeof(double));
    
            var issueOwnerParameter = issueOwner != null ?
                new ObjectParameter("IssueOwner", issueOwner) :
                new ObjectParameter("IssueOwner", typeof(string));
    
            var issueBaseTimeParameter = issueBaseTime.HasValue ?
                new ObjectParameter("IssueBaseTime", issueBaseTime) :
                new ObjectParameter("IssueBaseTime", typeof(double));
    
            var issueConfirmParameter = issueConfirm != null ?
                new ObjectParameter("IssueConfirm", issueConfirm) :
                new ObjectParameter("IssueConfirm", typeof(string));
    
            var issueConfirmTimeParameter = issueConfirmTime.HasValue ?
                new ObjectParameter("IssueConfirmTime", issueConfirmTime) :
                new ObjectParameter("IssueConfirmTime", typeof(System.DateTime));
    
            var issueifCompletedParameter = issueifCompleted != null ?
                new ObjectParameter("IssueifCompleted", issueifCompleted) :
                new ObjectParameter("IssueifCompleted", typeof(string));
    
            var issueCompletedTimeParameter = issueCompletedTime.HasValue ?
                new ObjectParameter("IssueCompletedTime", issueCompletedTime) :
                new ObjectParameter("IssueCompletedTime", typeof(System.DateTime));
    
            var issueBaseScoreParameter = issueBaseScore.HasValue ?
                new ObjectParameter("IssueBaseScore", issueBaseScore) :
                new ObjectParameter("IssueBaseScore", typeof(double));
    
            var issueScoreParameter = issueScore.HasValue ?
                new ObjectParameter("IssueScore", issueScore) :
                new ObjectParameter("IssueScore", typeof(double));
    
            var lastTaskTotalScoreParameter = lastTaskTotalScore.HasValue ?
                new ObjectParameter("LastTaskTotalScore", lastTaskTotalScore) :
                new ObjectParameter("LastTaskTotalScore", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var productFileName1Parameter = productFileName1 != null ?
                new ObjectParameter("ProductFileName1", productFileName1) :
                new ObjectParameter("ProductFileName1", typeof(string));
    
            var productFileName2Parameter = productFileName2 != null ?
                new ObjectParameter("ProductFileName2", productFileName2) :
                new ObjectParameter("ProductFileName2", typeof(string));
    
            var productFileName3Parameter = productFileName3 != null ?
                new ObjectParameter("ProductFileName3", productFileName3) :
                new ObjectParameter("ProductFileName3", typeof(string));
    
            var productFileName4Parameter = productFileName4 != null ?
                new ObjectParameter("ProductFileName4", productFileName4) :
                new ObjectParameter("ProductFileName4", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var ifOverdueParameter = ifOverdue != null ?
                new ObjectParameter("IfOverdue", ifOverdue) :
                new ObjectParameter("IfOverdue", typeof(string));
    
            var cDSDParameter = cDSD != null ?
                new ObjectParameter("CDSD", cDSD) :
                new ObjectParameter("CDSD", typeof(string));
    
            var xZSDParameter = xZSD != null ?
                new ObjectParameter("XZSD", xZSD) :
                new ObjectParameter("XZSD", typeof(string));
    
            var zDZZParameter = zDZZ != null ?
                new ObjectParameter("ZDZZ", zDZZ) :
                new ObjectParameter("ZDZZ", typeof(string));
    
            var eDGLParameter = eDGL != null ?
                new ObjectParameter("EDGL", eDGL) :
                new ObjectParameter("EDGL", typeof(string));
    
            var lGGGParameter = lGGG != null ?
                new ObjectParameter("LGGG", lGGG) :
                new ObjectParameter("LGGG", typeof(string));
    
            var gZYLParameter = gZYL != null ?
                new ObjectParameter("GZYL", gZYL) :
                new ObjectParameter("GZYL", typeof(string));
    
            var yYYParameter = yYY != null ?
                new ObjectParameter("YYY", yYY) :
                new ObjectParameter("YYY", typeof(string));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var projectID2Parameter = projectID2.HasValue ?
                new ObjectParameter("ProjectID2", projectID2) :
                new ObjectParameter("ProjectID2", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PM_TaskEdit", typeParameter, taskIDParameter, parentTaskIDParameter, projectNameParameter, priorityCodeParameter, taskLevelParameter, taskNameParameter, taskTypeParameter, productNameParameter, productSpecParameter, ownerParameter, taskScoreParameter, dueDayParameter, taskDescParameter, taskFile1Parameter, taskFile2Parameter, taskFile3Parameter, machineDesignOwnerParameter, machineDesignBaseTimeParameter, machineDesignConfirmParameter, machineDesignConfirmTimeParameter, machineDesignifCompletedParameter, machineDesignCompletedTimeParameter, machineDesignBaseScoreParameter, machineDesignScoreParameter, machineDesignFileName1Parameter, machineDesignFileName2Parameter, electricalOwnerParameter, electricalDesignBaseTimeParameter, electricalDesignConfirmParameter, electricalDesignConfirmTimeParameter, electricalDesignifCompletedParameter, electricalDesignCompletedTimeParameter, electricalDesignBaseScoreParameter, electricalDesignScoreParameter, electricalDesignFileName1Parameter, electricalDesignFileName2Parameter, qualifiedOwnerParameter, qualifiedBaseTimeParameter, qualifiedConfirmParameter, qualifiedConfirmTimeParameter, qualifiedifCompletedParameter, qualifiedCompletedTimeParameter, qualifiedBaseScoreParameter, qualifiedScoreParameter, issueOwnerParameter, issueBaseTimeParameter, issueConfirmParameter, issueConfirmTimeParameter, issueifCompletedParameter, issueCompletedTimeParameter, issueBaseScoreParameter, issueScoreParameter, lastTaskTotalScoreParameter, statusParameter, productFileName1Parameter, productFileName2Parameter, productFileName3Parameter, productFileName4Parameter, noteParameter, ifOverdueParameter, cDSDParameter, xZSDParameter, zDZZParameter, eDGLParameter, lGGGParameter, gZYLParameter, yYYParameter, ifDriveParameter, startTimeParameter, endTimeParameter, createdByParameter, projectID2Parameter, productDetailIDParameter);
        }
    
        public virtual ObjectResult<PM_TaskProgressEdit_Result> PM_TaskProgressEdit(string type, Nullable<int> taskId, string progressItem, string timeFrom, string timeTO, string childTaskDescription, string statusDescription, string userName)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var progressItemParameter = progressItem != null ?
                new ObjectParameter("ProgressItem", progressItem) :
                new ObjectParameter("ProgressItem", typeof(string));
    
            var timeFromParameter = timeFrom != null ?
                new ObjectParameter("TimeFrom", timeFrom) :
                new ObjectParameter("TimeFrom", typeof(string));
    
            var timeTOParameter = timeTO != null ?
                new ObjectParameter("TimeTO", timeTO) :
                new ObjectParameter("TimeTO", typeof(string));
    
            var childTaskDescriptionParameter = childTaskDescription != null ?
                new ObjectParameter("ChildTaskDescription", childTaskDescription) :
                new ObjectParameter("ChildTaskDescription", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("statusDescription", statusDescription) :
                new ObjectParameter("statusDescription", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PM_TaskProgressEdit_Result>("PM_TaskProgressEdit", typeParameter, taskIdParameter, progressItemParameter, timeFromParameter, timeTOParameter, childTaskDescriptionParameter, statusDescriptionParameter, userNameParameter);
        }
    
        public virtual int PM_WH_Delete(string tYPE, Nullable<int> wHID, Nullable<int> wHAreaID, Nullable<int> wHStorageLocationID, Nullable<int> wHGoodsAllocationID)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var wHIDParameter = wHID.HasValue ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(int));
    
            var wHAreaIDParameter = wHAreaID.HasValue ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(int));
    
            var wHStorageLocationIDParameter = wHStorageLocationID.HasValue ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(int));
    
            var wHGoodsAllocationIDParameter = wHGoodsAllocationID.HasValue ?
                new ObjectParameter("WHGoodsAllocationID", wHGoodsAllocationID) :
                new ObjectParameter("WHGoodsAllocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PM_WH_Delete", tYPEParameter, wHIDParameter, wHAreaIDParameter, wHStorageLocationIDParameter, wHGoodsAllocationIDParameter);
        }
    
        public virtual int PMCAskPurchase(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PMCAskPurchase", taskIDParameter);
        }
    
        public virtual int PMCAssignConfirm(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PMCAssignConfirm", taskIDParameter);
        }
    
        public virtual int PMCCompleted(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PMCCompleted", taskIDParameter);
        }
    
        public virtual ObjectResult<POcheck_Result> POcheck(string type, string userName, Nullable<int> taskid)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("Taskid", taskid) :
                new ObjectParameter("Taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POcheck_Result>("POcheck", typeParameter, userNameParameter, taskidParameter);
        }
    
        public virtual ObjectResult<string> PONO(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PONO", statusParameter);
        }
    
        public virtual ObjectResult<PoNoCheck_Result> PoNoCheck(Nullable<int> taskid)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("Taskid", taskid) :
                new ObjectParameter("Taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoNoCheck_Result>("PoNoCheck", taskidParameter);
        }
    
        public virtual ObjectResult<ProcessBOM_Result> ProcessBOM(string partNumber, string partSpec, string partMaterial)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcessBOM_Result>("ProcessBOM", partNumberParameter, partSpecParameter, partMaterialParameter);
        }
    
        public virtual ObjectResult<ProductDetail_Order_check_Result> ProductDetail_Order_check(Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail_Order_check_Result>("ProductDetail_Order_check", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual int ProductDetail_Order_Confirm(Nullable<int> contractID, Nullable<int> productDetailID, string productType, string productName, string count, string productSpec, string units, string taskFile1, string taskFile2, string taskFile3, string p_Speed, string dueDay, string p_CarryingCapacity, string p_ElectricalRequirements, string p_EquipmentWorkplace, string p_Main_materialofworkpiece, string p_ChildPartSpecRange, string p_ChildPartWeight, string p_WorkpieceFeedingMode, string p_RollerDiameter, string p_RollerMaterial, string p_RollerSurface, string p_RollerTransferMode, string p_MainBeaMaterial, Nullable<int> productTypeID, string ifDrive)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var countParameter = count != null ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var taskFile1Parameter = taskFile1 != null ?
                new ObjectParameter("TaskFile1", taskFile1) :
                new ObjectParameter("TaskFile1", typeof(string));
    
            var taskFile2Parameter = taskFile2 != null ?
                new ObjectParameter("TaskFile2", taskFile2) :
                new ObjectParameter("TaskFile2", typeof(string));
    
            var taskFile3Parameter = taskFile3 != null ?
                new ObjectParameter("TaskFile3", taskFile3) :
                new ObjectParameter("TaskFile3", typeof(string));
    
            var p_SpeedParameter = p_Speed != null ?
                new ObjectParameter("P_Speed", p_Speed) :
                new ObjectParameter("P_Speed", typeof(string));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            var p_CarryingCapacityParameter = p_CarryingCapacity != null ?
                new ObjectParameter("P_CarryingCapacity", p_CarryingCapacity) :
                new ObjectParameter("P_CarryingCapacity", typeof(string));
    
            var p_ElectricalRequirementsParameter = p_ElectricalRequirements != null ?
                new ObjectParameter("P_ElectricalRequirements", p_ElectricalRequirements) :
                new ObjectParameter("P_ElectricalRequirements", typeof(string));
    
            var p_EquipmentWorkplaceParameter = p_EquipmentWorkplace != null ?
                new ObjectParameter("P_EquipmentWorkplace", p_EquipmentWorkplace) :
                new ObjectParameter("P_EquipmentWorkplace", typeof(string));
    
            var p_Main_materialofworkpieceParameter = p_Main_materialofworkpiece != null ?
                new ObjectParameter("P_Main_materialofworkpiece", p_Main_materialofworkpiece) :
                new ObjectParameter("P_Main_materialofworkpiece", typeof(string));
    
            var p_ChildPartSpecRangeParameter = p_ChildPartSpecRange != null ?
                new ObjectParameter("P_ChildPartSpecRange", p_ChildPartSpecRange) :
                new ObjectParameter("P_ChildPartSpecRange", typeof(string));
    
            var p_ChildPartWeightParameter = p_ChildPartWeight != null ?
                new ObjectParameter("P_ChildPartWeight", p_ChildPartWeight) :
                new ObjectParameter("P_ChildPartWeight", typeof(string));
    
            var p_WorkpieceFeedingModeParameter = p_WorkpieceFeedingMode != null ?
                new ObjectParameter("P_WorkpieceFeedingMode", p_WorkpieceFeedingMode) :
                new ObjectParameter("P_WorkpieceFeedingMode", typeof(string));
    
            var p_RollerDiameterParameter = p_RollerDiameter != null ?
                new ObjectParameter("P_RollerDiameter", p_RollerDiameter) :
                new ObjectParameter("P_RollerDiameter", typeof(string));
    
            var p_RollerMaterialParameter = p_RollerMaterial != null ?
                new ObjectParameter("P_RollerMaterial", p_RollerMaterial) :
                new ObjectParameter("P_RollerMaterial", typeof(string));
    
            var p_RollerSurfaceParameter = p_RollerSurface != null ?
                new ObjectParameter("P_RollerSurface", p_RollerSurface) :
                new ObjectParameter("P_RollerSurface", typeof(string));
    
            var p_RollerTransferModeParameter = p_RollerTransferMode != null ?
                new ObjectParameter("P_RollerTransferMode", p_RollerTransferMode) :
                new ObjectParameter("P_RollerTransferMode", typeof(string));
    
            var p_MainBeaMaterialParameter = p_MainBeaMaterial != null ?
                new ObjectParameter("P_MainBeaMaterial", p_MainBeaMaterial) :
                new ObjectParameter("P_MainBeaMaterial", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductDetail_Order_Confirm", contractIDParameter, productDetailIDParameter, productTypeParameter, productNameParameter, countParameter, productSpecParameter, unitsParameter, taskFile1Parameter, taskFile2Parameter, taskFile3Parameter, p_SpeedParameter, dueDayParameter, p_CarryingCapacityParameter, p_ElectricalRequirementsParameter, p_EquipmentWorkplaceParameter, p_Main_materialofworkpieceParameter, p_ChildPartSpecRangeParameter, p_ChildPartWeightParameter, p_WorkpieceFeedingModeParameter, p_RollerDiameterParameter, p_RollerMaterialParameter, p_RollerSurfaceParameter, p_RollerTransferModeParameter, p_MainBeaMaterialParameter, productTypeIDParameter, ifDriveParameter);
        }
    
        public virtual ObjectResult<ProductDetail_Order_Edit_Check_Result> ProductDetail_Order_Edit_Check(Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail_Order_Edit_Check_Result>("ProductDetail_Order_Edit_Check", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual ObjectResult<ProductDetail_Order_Transfer_Result> ProductDetail_Order_Transfer(Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetail_Order_Transfer_Result>("ProductDetail_Order_Transfer", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual ObjectResult<ProductionName_Result> ProductionName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionName_Result>("ProductionName");
        }
    
        public virtual int ProductionPlanning_Distribution(string workorderNO, string line, string dueData)
        {
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var dueDataParameter = dueData != null ?
                new ObjectParameter("DueData", dueData) :
                new ObjectParameter("DueData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductionPlanning_Distribution", workorderNOParameter, lineParameter, dueDataParameter);
        }
    
        public virtual int ProductStartConfirm(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductStartConfirm", taskIDParameter);
        }
    
        public virtual ObjectResult<Purchase_MaterialList_Result> Purchase_MaterialList(string type, string pONO, string createdTime, string createdTimeEnd, Nullable<int> purchaseID, Nullable<int> applyPurchaseQTY, Nullable<double> unitPrice, string createdBy, string applierProductType, string materialID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var createdTimeParameter = createdTime != null ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var purchaseIDParameter = purchaseID.HasValue ?
                new ObjectParameter("PurchaseID", purchaseID) :
                new ObjectParameter("PurchaseID", typeof(int));
    
            var applyPurchaseQTYParameter = applyPurchaseQTY.HasValue ?
                new ObjectParameter("ApplyPurchaseQTY", applyPurchaseQTY) :
                new ObjectParameter("ApplyPurchaseQTY", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(double));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var applierProductTypeParameter = applierProductType != null ?
                new ObjectParameter("ApplierProductType", applierProductType) :
                new ObjectParameter("ApplierProductType", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Purchase_MaterialList_Result>("Purchase_MaterialList", typeParameter, pONOParameter, createdTimeParameter, createdTimeEndParameter, purchaseIDParameter, applyPurchaseQTYParameter, unitPriceParameter, createdByParameter, applierProductTypeParameter, materialIDParameter);
        }
    
        public virtual ObjectResult<PurchaseAll_Result> PurchaseAll(string type, string id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseAll_Result>("PurchaseAll", typeParameter, idParameter);
        }
    
        public virtual int PurchaseApplyConfirm(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseApplyConfirm", taskIDParameter);
        }
    
        public virtual ObjectResult<PurchaseCo_Result> PurchaseCo(string contractTypeId, string applierId, string mid)
        {
            var contractTypeIdParameter = contractTypeId != null ?
                new ObjectParameter("ContractTypeId", contractTypeId) :
                new ObjectParameter("ContractTypeId", typeof(string));
    
            var applierIdParameter = applierId != null ?
                new ObjectParameter("ApplierId", applierId) :
                new ObjectParameter("ApplierId", typeof(string));
    
            var midParameter = mid != null ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseCo_Result>("PurchaseCo", contractTypeIdParameter, applierIdParameter, midParameter);
        }
    
        public virtual ObjectResult<PurchaseQTYcheck_Result> PurchaseQTYcheck(Nullable<int> taskID, string listType)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseQTYcheck_Result>("PurchaseQTYcheck", taskIDParameter, listTypeParameter);
        }
    
        public virtual int QueMapingPart(Nullable<int> partID, Nullable<int> taskID, string createdBy)
        {
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("PartID", partID) :
                new ObjectParameter("PartID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QueMapingPart", partIDParameter, taskIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Raw_MaterialStock_Result> Raw_MaterialStock(string projectName, string partNumber, string partSpec, string createdTimeEnd, string createdTime, string createdBy)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var createdTimeParameter = createdTime != null ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Raw_MaterialStock_Result>("Raw_MaterialStock", projectNameParameter, partNumberParameter, partSpecParameter, createdTimeEndParameter, createdTimeParameter, createdByParameter);
        }
    
        public virtual ObjectResult<RawWHIQCList_Result> RawWHIQCList(string pONOID, string pONO)
        {
            var pONOIDParameter = pONOID != null ?
                new ObjectParameter("PONOID", pONOID) :
                new ObjectParameter("PONOID", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RawWHIQCList_Result>("RawWHIQCList", pONOIDParameter, pONOParameter);
        }
    
        public virtual ObjectResult<ReceivablesHistorycheck_Result> ReceivablesHistorycheck(Nullable<int> contractID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceivablesHistorycheck_Result>("ReceivablesHistorycheck", contractIDParameter);
        }
    
        public virtual ObjectResult<SaveRoute_Result> SaveRoute(string routeSaveAS, string createdBy, Nullable<int> iD)
        {
            var routeSaveASParameter = routeSaveAS != null ?
                new ObjectParameter("RouteSaveAS", routeSaveAS) :
                new ObjectParameter("RouteSaveAS", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveRoute_Result>("SaveRoute", routeSaveASParameter, createdByParameter, iDParameter);
        }
    
        public virtual int Scheduling(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduling", taskIDParameter);
        }
    
        public virtual ObjectResult<string> SP_ADD_Package(string tYPE, string workorderNO, Nullable<int> totalPCS, string createdEmployee, Nullable<int> packageLabelQTY)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var totalPCSParameter = totalPCS.HasValue ?
                new ObjectParameter("TotalPCS", totalPCS) :
                new ObjectParameter("TotalPCS", typeof(int));
    
            var createdEmployeeParameter = createdEmployee != null ?
                new ObjectParameter("CreatedEmployee", createdEmployee) :
                new ObjectParameter("CreatedEmployee", typeof(string));
    
            var packageLabelQTYParameter = packageLabelQTY.HasValue ?
                new ObjectParameter("PackageLabelQTY", packageLabelQTY) :
                new ObjectParameter("PackageLabelQTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ADD_Package", tYPEParameter, workorderNOParameter, totalPCSParameter, createdEmployeeParameter, packageLabelQTYParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_CheckWO_Package_Result> SP_CheckWO_Package(string type, string workorderNO)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CheckWO_Package_Result>("SP_CheckWO_Package", typeParameter, workorderNOParameter);
        }
    
        public virtual ObjectResult<SP_Contract_checkProductOrder_Result> SP_Contract_checkProductOrder(string createdTimeStart, string createdTimeEnd, string statusID, string productOrderStatus, string customerName, string contractNumber)
        {
            var createdTimeStartParameter = createdTimeStart != null ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var productOrderStatusParameter = productOrderStatus != null ?
                new ObjectParameter("ProductOrderStatus", productOrderStatus) :
                new ObjectParameter("ProductOrderStatus", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_checkProductOrder_Result>("SP_Contract_checkProductOrder", createdTimeStartParameter, createdTimeEndParameter, statusIDParameter, productOrderStatusParameter, customerNameParameter, contractNumberParameter);
        }
    
        public virtual ObjectResult<SP_Contract_Package_Result> SP_Contract_Package(string tYPE, string workorderNO)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_Package_Result>("SP_Contract_Package", tYPEParameter, workorderNOParameter);
        }
    
        public virtual ObjectResult<string> SP_Contract_ProductDetail(string type, Nullable<int> contractID, string createdBy, Nullable<int> productDetailID, string productName, Nullable<decimal> count, string productSpec, string units, Nullable<decimal> newDeliveryedCount, Nullable<System.DateTime> deliveryDate, Nullable<decimal> newInstalledQuantity, Nullable<System.DateTime> completionDate, string acceptance, Nullable<System.DateTime> acceptanceDate, Nullable<int> historyID, string customer_ProductName, string productType, Nullable<System.DateTime> dueDay, string ifDrive, string taskFile1, string taskFile2, string taskFile3, string shipmentNoticeNumber, string p_Speed, string p_CarryingCapacity, string p_ElectricalRequirements, string p_EquipmentWorkplace, string p_Main_materialofworkpiece, string p_ChildPartSpecRange, string p_WorkpieceFeedingMode, string p_RollerDiameter, string p_RollerMaterial, string p_RollerSurface, string p_RollerTransferMode, string p_MainBeaMaterial, string p_ChildPartWeight, Nullable<int> productTypeID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(decimal));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var newDeliveryedCountParameter = newDeliveryedCount.HasValue ?
                new ObjectParameter("NewDeliveryedCount", newDeliveryedCount) :
                new ObjectParameter("NewDeliveryedCount", typeof(decimal));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var newInstalledQuantityParameter = newInstalledQuantity.HasValue ?
                new ObjectParameter("newInstalledQuantity", newInstalledQuantity) :
                new ObjectParameter("newInstalledQuantity", typeof(decimal));
    
            var completionDateParameter = completionDate.HasValue ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(System.DateTime));
    
            var acceptanceParameter = acceptance != null ?
                new ObjectParameter("Acceptance", acceptance) :
                new ObjectParameter("Acceptance", typeof(string));
    
            var acceptanceDateParameter = acceptanceDate.HasValue ?
                new ObjectParameter("AcceptanceDate", acceptanceDate) :
                new ObjectParameter("AcceptanceDate", typeof(System.DateTime));
    
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("historyID", historyID) :
                new ObjectParameter("historyID", typeof(int));
    
            var customer_ProductNameParameter = customer_ProductName != null ?
                new ObjectParameter("Customer_ProductName", customer_ProductName) :
                new ObjectParameter("Customer_ProductName", typeof(string));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var dueDayParameter = dueDay.HasValue ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(System.DateTime));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            var taskFile1Parameter = taskFile1 != null ?
                new ObjectParameter("TaskFile1", taskFile1) :
                new ObjectParameter("TaskFile1", typeof(string));
    
            var taskFile2Parameter = taskFile2 != null ?
                new ObjectParameter("TaskFile2", taskFile2) :
                new ObjectParameter("TaskFile2", typeof(string));
    
            var taskFile3Parameter = taskFile3 != null ?
                new ObjectParameter("TaskFile3", taskFile3) :
                new ObjectParameter("TaskFile3", typeof(string));
    
            var shipmentNoticeNumberParameter = shipmentNoticeNumber != null ?
                new ObjectParameter("ShipmentNoticeNumber", shipmentNoticeNumber) :
                new ObjectParameter("ShipmentNoticeNumber", typeof(string));
    
            var p_SpeedParameter = p_Speed != null ?
                new ObjectParameter("P_Speed", p_Speed) :
                new ObjectParameter("P_Speed", typeof(string));
    
            var p_CarryingCapacityParameter = p_CarryingCapacity != null ?
                new ObjectParameter("P_CarryingCapacity", p_CarryingCapacity) :
                new ObjectParameter("P_CarryingCapacity", typeof(string));
    
            var p_ElectricalRequirementsParameter = p_ElectricalRequirements != null ?
                new ObjectParameter("P_ElectricalRequirements", p_ElectricalRequirements) :
                new ObjectParameter("P_ElectricalRequirements", typeof(string));
    
            var p_EquipmentWorkplaceParameter = p_EquipmentWorkplace != null ?
                new ObjectParameter("P_EquipmentWorkplace", p_EquipmentWorkplace) :
                new ObjectParameter("P_EquipmentWorkplace", typeof(string));
    
            var p_Main_materialofworkpieceParameter = p_Main_materialofworkpiece != null ?
                new ObjectParameter("P_Main_materialofworkpiece", p_Main_materialofworkpiece) :
                new ObjectParameter("P_Main_materialofworkpiece", typeof(string));
    
            var p_ChildPartSpecRangeParameter = p_ChildPartSpecRange != null ?
                new ObjectParameter("P_ChildPartSpecRange", p_ChildPartSpecRange) :
                new ObjectParameter("P_ChildPartSpecRange", typeof(string));
    
            var p_WorkpieceFeedingModeParameter = p_WorkpieceFeedingMode != null ?
                new ObjectParameter("P_WorkpieceFeedingMode", p_WorkpieceFeedingMode) :
                new ObjectParameter("P_WorkpieceFeedingMode", typeof(string));
    
            var p_RollerDiameterParameter = p_RollerDiameter != null ?
                new ObjectParameter("P_RollerDiameter", p_RollerDiameter) :
                new ObjectParameter("P_RollerDiameter", typeof(string));
    
            var p_RollerMaterialParameter = p_RollerMaterial != null ?
                new ObjectParameter("P_RollerMaterial", p_RollerMaterial) :
                new ObjectParameter("P_RollerMaterial", typeof(string));
    
            var p_RollerSurfaceParameter = p_RollerSurface != null ?
                new ObjectParameter("P_RollerSurface", p_RollerSurface) :
                new ObjectParameter("P_RollerSurface", typeof(string));
    
            var p_RollerTransferModeParameter = p_RollerTransferMode != null ?
                new ObjectParameter("P_RollerTransferMode", p_RollerTransferMode) :
                new ObjectParameter("P_RollerTransferMode", typeof(string));
    
            var p_MainBeaMaterialParameter = p_MainBeaMaterial != null ?
                new ObjectParameter("P_MainBeaMaterial", p_MainBeaMaterial) :
                new ObjectParameter("P_MainBeaMaterial", typeof(string));
    
            var p_ChildPartWeightParameter = p_ChildPartWeight != null ?
                new ObjectParameter("P_ChildPartWeight", p_ChildPartWeight) :
                new ObjectParameter("P_ChildPartWeight", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Contract_ProductDetail", typeParameter, contractIDParameter, createdByParameter, productDetailIDParameter, productNameParameter, countParameter, productSpecParameter, unitsParameter, newDeliveryedCountParameter, deliveryDateParameter, newInstalledQuantityParameter, completionDateParameter, acceptanceParameter, acceptanceDateParameter, historyIDParameter, customer_ProductNameParameter, productTypeParameter, dueDayParameter, ifDriveParameter, taskFile1Parameter, taskFile2Parameter, taskFile3Parameter, shipmentNoticeNumberParameter, p_SpeedParameter, p_CarryingCapacityParameter, p_ElectricalRequirementsParameter, p_EquipmentWorkplaceParameter, p_Main_materialofworkpieceParameter, p_ChildPartSpecRangeParameter, p_WorkpieceFeedingModeParameter, p_RollerDiameterParameter, p_RollerMaterialParameter, p_RollerSurfaceParameter, p_RollerTransferModeParameter, p_MainBeaMaterialParameter, p_ChildPartWeightParameter, productTypeIDParameter);
        }
    
        public virtual int SP_Contract_ProductDetail_add(string contractID, string productName, string customer_ProductName, Nullable<int> productTypeID, string ifDrive, string productSpec, string p_Speed, string p_CarryingCapacity, string p_ElectricalRequirements, string p_EquipmentWorkplace, string p_Main_materialofworkpiece, string p_MainBeaMaterial, string p_ChildPartSpecRange, string p_ChildPartWeight, string p_WorkpieceFeedingMode, string p_RollerDiameter, string p_RollerMaterial, string p_RollerSurface, string p_RollerTransferMode, string units, string count, string dueDay, string acceptance, string createdBy)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var customer_ProductNameParameter = customer_ProductName != null ?
                new ObjectParameter("Customer_ProductName", customer_ProductName) :
                new ObjectParameter("Customer_ProductName", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var p_SpeedParameter = p_Speed != null ?
                new ObjectParameter("P_Speed", p_Speed) :
                new ObjectParameter("P_Speed", typeof(string));
    
            var p_CarryingCapacityParameter = p_CarryingCapacity != null ?
                new ObjectParameter("P_CarryingCapacity", p_CarryingCapacity) :
                new ObjectParameter("P_CarryingCapacity", typeof(string));
    
            var p_ElectricalRequirementsParameter = p_ElectricalRequirements != null ?
                new ObjectParameter("P_ElectricalRequirements", p_ElectricalRequirements) :
                new ObjectParameter("P_ElectricalRequirements", typeof(string));
    
            var p_EquipmentWorkplaceParameter = p_EquipmentWorkplace != null ?
                new ObjectParameter("P_EquipmentWorkplace", p_EquipmentWorkplace) :
                new ObjectParameter("P_EquipmentWorkplace", typeof(string));
    
            var p_Main_materialofworkpieceParameter = p_Main_materialofworkpiece != null ?
                new ObjectParameter("P_Main_materialofworkpiece", p_Main_materialofworkpiece) :
                new ObjectParameter("P_Main_materialofworkpiece", typeof(string));
    
            var p_MainBeaMaterialParameter = p_MainBeaMaterial != null ?
                new ObjectParameter("P_MainBeaMaterial", p_MainBeaMaterial) :
                new ObjectParameter("P_MainBeaMaterial", typeof(string));
    
            var p_ChildPartSpecRangeParameter = p_ChildPartSpecRange != null ?
                new ObjectParameter("P_ChildPartSpecRange", p_ChildPartSpecRange) :
                new ObjectParameter("P_ChildPartSpecRange", typeof(string));
    
            var p_ChildPartWeightParameter = p_ChildPartWeight != null ?
                new ObjectParameter("P_ChildPartWeight", p_ChildPartWeight) :
                new ObjectParameter("P_ChildPartWeight", typeof(string));
    
            var p_WorkpieceFeedingModeParameter = p_WorkpieceFeedingMode != null ?
                new ObjectParameter("P_WorkpieceFeedingMode", p_WorkpieceFeedingMode) :
                new ObjectParameter("P_WorkpieceFeedingMode", typeof(string));
    
            var p_RollerDiameterParameter = p_RollerDiameter != null ?
                new ObjectParameter("P_RollerDiameter", p_RollerDiameter) :
                new ObjectParameter("P_RollerDiameter", typeof(string));
    
            var p_RollerMaterialParameter = p_RollerMaterial != null ?
                new ObjectParameter("P_RollerMaterial", p_RollerMaterial) :
                new ObjectParameter("P_RollerMaterial", typeof(string));
    
            var p_RollerSurfaceParameter = p_RollerSurface != null ?
                new ObjectParameter("P_RollerSurface", p_RollerSurface) :
                new ObjectParameter("P_RollerSurface", typeof(string));
    
            var p_RollerTransferModeParameter = p_RollerTransferMode != null ?
                new ObjectParameter("P_RollerTransferMode", p_RollerTransferMode) :
                new ObjectParameter("P_RollerTransferMode", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var countParameter = count != null ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(string));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            var acceptanceParameter = acceptance != null ?
                new ObjectParameter("Acceptance", acceptance) :
                new ObjectParameter("Acceptance", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contract_ProductDetail_add", contractIDParameter, productNameParameter, customer_ProductNameParameter, productTypeIDParameter, ifDriveParameter, productSpecParameter, p_SpeedParameter, p_CarryingCapacityParameter, p_ElectricalRequirementsParameter, p_EquipmentWorkplaceParameter, p_Main_materialofworkpieceParameter, p_MainBeaMaterialParameter, p_ChildPartSpecRangeParameter, p_ChildPartWeightParameter, p_WorkpieceFeedingModeParameter, p_RollerDiameterParameter, p_RollerMaterialParameter, p_RollerSurfaceParameter, p_RollerTransferModeParameter, unitsParameter, countParameter, dueDayParameter, acceptanceParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SP_Contract_ProductDetail_Check_Result> SP_Contract_ProductDetail_Check(Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_ProductDetail_Check_Result>("SP_Contract_ProductDetail_Check", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual int SP_Contract_ProductDetail_Update(string productDetailID, string contractID, string productName, string customer_ProductName, Nullable<int> productTypeID, string ifDrive, string productSpec, string p_Speed, string p_CarryingCapacity, string p_ElectricalRequirements, string p_EquipmentWorkplace, string p_Main_materialofworkpiece, string p_MainBeaMaterial, string p_ChildPartSpecRange, string p_ChildPartWeight, string p_WorkpieceFeedingMode, string p_RollerDiameter, string p_RollerMaterial, string p_RollerSurface, string p_RollerTransferMode, string units, string count, string dueDay)
        {
            var productDetailIDParameter = productDetailID != null ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(string));
    
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var customer_ProductNameParameter = customer_ProductName != null ?
                new ObjectParameter("Customer_ProductName", customer_ProductName) :
                new ObjectParameter("Customer_ProductName", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var p_SpeedParameter = p_Speed != null ?
                new ObjectParameter("P_Speed", p_Speed) :
                new ObjectParameter("P_Speed", typeof(string));
    
            var p_CarryingCapacityParameter = p_CarryingCapacity != null ?
                new ObjectParameter("P_CarryingCapacity", p_CarryingCapacity) :
                new ObjectParameter("P_CarryingCapacity", typeof(string));
    
            var p_ElectricalRequirementsParameter = p_ElectricalRequirements != null ?
                new ObjectParameter("P_ElectricalRequirements", p_ElectricalRequirements) :
                new ObjectParameter("P_ElectricalRequirements", typeof(string));
    
            var p_EquipmentWorkplaceParameter = p_EquipmentWorkplace != null ?
                new ObjectParameter("P_EquipmentWorkplace", p_EquipmentWorkplace) :
                new ObjectParameter("P_EquipmentWorkplace", typeof(string));
    
            var p_Main_materialofworkpieceParameter = p_Main_materialofworkpiece != null ?
                new ObjectParameter("P_Main_materialofworkpiece", p_Main_materialofworkpiece) :
                new ObjectParameter("P_Main_materialofworkpiece", typeof(string));
    
            var p_MainBeaMaterialParameter = p_MainBeaMaterial != null ?
                new ObjectParameter("P_MainBeaMaterial", p_MainBeaMaterial) :
                new ObjectParameter("P_MainBeaMaterial", typeof(string));
    
            var p_ChildPartSpecRangeParameter = p_ChildPartSpecRange != null ?
                new ObjectParameter("P_ChildPartSpecRange", p_ChildPartSpecRange) :
                new ObjectParameter("P_ChildPartSpecRange", typeof(string));
    
            var p_ChildPartWeightParameter = p_ChildPartWeight != null ?
                new ObjectParameter("P_ChildPartWeight", p_ChildPartWeight) :
                new ObjectParameter("P_ChildPartWeight", typeof(string));
    
            var p_WorkpieceFeedingModeParameter = p_WorkpieceFeedingMode != null ?
                new ObjectParameter("P_WorkpieceFeedingMode", p_WorkpieceFeedingMode) :
                new ObjectParameter("P_WorkpieceFeedingMode", typeof(string));
    
            var p_RollerDiameterParameter = p_RollerDiameter != null ?
                new ObjectParameter("P_RollerDiameter", p_RollerDiameter) :
                new ObjectParameter("P_RollerDiameter", typeof(string));
    
            var p_RollerMaterialParameter = p_RollerMaterial != null ?
                new ObjectParameter("P_RollerMaterial", p_RollerMaterial) :
                new ObjectParameter("P_RollerMaterial", typeof(string));
    
            var p_RollerSurfaceParameter = p_RollerSurface != null ?
                new ObjectParameter("P_RollerSurface", p_RollerSurface) :
                new ObjectParameter("P_RollerSurface", typeof(string));
    
            var p_RollerTransferModeParameter = p_RollerTransferMode != null ?
                new ObjectParameter("P_RollerTransferMode", p_RollerTransferMode) :
                new ObjectParameter("P_RollerTransferMode", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var countParameter = count != null ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(string));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contract_ProductDetail_Update", productDetailIDParameter, contractIDParameter, productNameParameter, customer_ProductNameParameter, productTypeIDParameter, ifDriveParameter, productSpecParameter, p_SpeedParameter, p_CarryingCapacityParameter, p_ElectricalRequirementsParameter, p_EquipmentWorkplaceParameter, p_Main_materialofworkpieceParameter, p_MainBeaMaterialParameter, p_ChildPartSpecRangeParameter, p_ChildPartWeightParameter, p_WorkpieceFeedingModeParameter, p_RollerDiameterParameter, p_RollerMaterialParameter, p_RollerSurfaceParameter, p_RollerTransferModeParameter, unitsParameter, countParameter, dueDayParameter);
        }
    
        public virtual ObjectResult<SP_Contract_ProductDetailNotice_Check_Result> SP_Contract_ProductDetailNotice_Check(string contractID)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_ProductDetailNotice_Check_Result>("SP_Contract_ProductDetailNotice_Check", contractIDParameter);
        }
    
        public virtual int SP_Contract_ProductDetailNotice_Delete(string contractID)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contract_ProductDetailNotice_Delete", contractIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Contract_ProductDetailNotice_SendNotice(string contractID, string productDetailID, string qTY)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var productDetailIDParameter = productDetailID != null ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(string));
    
            var qTYParameter = qTY != null ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Contract_ProductDetailNotice_SendNotice", contractIDParameter, productDetailIDParameter, qTYParameter);
        }
    
        public virtual int SP_Contract_ProductDetailNotice_SendNoticeStatus(string contractID, string productDetailID)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var productDetailIDParameter = productDetailID != null ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contract_ProductDetailNotice_SendNoticeStatus", contractIDParameter, productDetailIDParameter);
        }
    
        public virtual ObjectResult<SP_Contract_ProductDetails_Result> SP_Contract_ProductDetails(string type, Nullable<int> contractID, Nullable<int> productDetailID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_ProductDetails_Result>("SP_Contract_ProductDetails", typeParameter, contractIDParameter, productDetailIDParameter);
        }
    
        public virtual ObjectResult<SP_Contract_ProductDetailsd_Result> SP_Contract_ProductDetailsd(string contractID, string productName, string customer_ProductName, Nullable<int> productTypeID, string ifDrive, string productSpec, string p_Speed, string p_CarryingCapacity, string p_ElectricalRequirements, string p_EquipmentWorkplace, string p_Main_materialofworkpiece, string p_MainBeaMaterial, string p_ChildPartSpecRange, string p_ChildPartWeight, string p_WorkpieceFeedingMode, string p_RollerDiameter, string p_RollerMaterial, string p_RollerSurface, string p_RollerTransferMode, string units, string count, string dueDay, string acceptance, string createdBy)
        {
            var contractIDParameter = contractID != null ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var customer_ProductNameParameter = customer_ProductName != null ?
                new ObjectParameter("Customer_ProductName", customer_ProductName) :
                new ObjectParameter("Customer_ProductName", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var ifDriveParameter = ifDrive != null ?
                new ObjectParameter("ifDrive", ifDrive) :
                new ObjectParameter("ifDrive", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var p_SpeedParameter = p_Speed != null ?
                new ObjectParameter("P_Speed", p_Speed) :
                new ObjectParameter("P_Speed", typeof(string));
    
            var p_CarryingCapacityParameter = p_CarryingCapacity != null ?
                new ObjectParameter("P_CarryingCapacity", p_CarryingCapacity) :
                new ObjectParameter("P_CarryingCapacity", typeof(string));
    
            var p_ElectricalRequirementsParameter = p_ElectricalRequirements != null ?
                new ObjectParameter("P_ElectricalRequirements", p_ElectricalRequirements) :
                new ObjectParameter("P_ElectricalRequirements", typeof(string));
    
            var p_EquipmentWorkplaceParameter = p_EquipmentWorkplace != null ?
                new ObjectParameter("P_EquipmentWorkplace", p_EquipmentWorkplace) :
                new ObjectParameter("P_EquipmentWorkplace", typeof(string));
    
            var p_Main_materialofworkpieceParameter = p_Main_materialofworkpiece != null ?
                new ObjectParameter("P_Main_materialofworkpiece", p_Main_materialofworkpiece) :
                new ObjectParameter("P_Main_materialofworkpiece", typeof(string));
    
            var p_MainBeaMaterialParameter = p_MainBeaMaterial != null ?
                new ObjectParameter("P_MainBeaMaterial", p_MainBeaMaterial) :
                new ObjectParameter("P_MainBeaMaterial", typeof(string));
    
            var p_ChildPartSpecRangeParameter = p_ChildPartSpecRange != null ?
                new ObjectParameter("P_ChildPartSpecRange", p_ChildPartSpecRange) :
                new ObjectParameter("P_ChildPartSpecRange", typeof(string));
    
            var p_ChildPartWeightParameter = p_ChildPartWeight != null ?
                new ObjectParameter("P_ChildPartWeight", p_ChildPartWeight) :
                new ObjectParameter("P_ChildPartWeight", typeof(string));
    
            var p_WorkpieceFeedingModeParameter = p_WorkpieceFeedingMode != null ?
                new ObjectParameter("P_WorkpieceFeedingMode", p_WorkpieceFeedingMode) :
                new ObjectParameter("P_WorkpieceFeedingMode", typeof(string));
    
            var p_RollerDiameterParameter = p_RollerDiameter != null ?
                new ObjectParameter("P_RollerDiameter", p_RollerDiameter) :
                new ObjectParameter("P_RollerDiameter", typeof(string));
    
            var p_RollerMaterialParameter = p_RollerMaterial != null ?
                new ObjectParameter("P_RollerMaterial", p_RollerMaterial) :
                new ObjectParameter("P_RollerMaterial", typeof(string));
    
            var p_RollerSurfaceParameter = p_RollerSurface != null ?
                new ObjectParameter("P_RollerSurface", p_RollerSurface) :
                new ObjectParameter("P_RollerSurface", typeof(string));
    
            var p_RollerTransferModeParameter = p_RollerTransferMode != null ?
                new ObjectParameter("P_RollerTransferMode", p_RollerTransferMode) :
                new ObjectParameter("P_RollerTransferMode", typeof(string));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var countParameter = count != null ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(string));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            var acceptanceParameter = acceptance != null ?
                new ObjectParameter("Acceptance", acceptance) :
                new ObjectParameter("Acceptance", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_ProductDetailsd_Result>("SP_Contract_ProductDetailsd", contractIDParameter, productNameParameter, customer_ProductNameParameter, productTypeIDParameter, ifDriveParameter, productSpecParameter, p_SpeedParameter, p_CarryingCapacityParameter, p_ElectricalRequirementsParameter, p_EquipmentWorkplaceParameter, p_Main_materialofworkpieceParameter, p_MainBeaMaterialParameter, p_ChildPartSpecRangeParameter, p_ChildPartWeightParameter, p_WorkpieceFeedingModeParameter, p_RollerDiameterParameter, p_RollerMaterialParameter, p_RollerSurfaceParameter, p_RollerTransferModeParameter, unitsParameter, countParameter, dueDayParameter, acceptanceParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SP_Contract_Receivables_Result> SP_Contract_Receivables(string type, Nullable<int> contractID, string createdBy, string newAmountCollected, string dateOfReceipt, string ticketOpeningAndDate, Nullable<int> receivablesID, Nullable<int> paymentID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var newAmountCollectedParameter = newAmountCollected != null ?
                new ObjectParameter("newAmountCollected", newAmountCollected) :
                new ObjectParameter("newAmountCollected", typeof(string));
    
            var dateOfReceiptParameter = dateOfReceipt != null ?
                new ObjectParameter("DateOfReceipt", dateOfReceipt) :
                new ObjectParameter("DateOfReceipt", typeof(string));
    
            var ticketOpeningAndDateParameter = ticketOpeningAndDate != null ?
                new ObjectParameter("TicketOpeningAndDate", ticketOpeningAndDate) :
                new ObjectParameter("TicketOpeningAndDate", typeof(string));
    
            var receivablesIDParameter = receivablesID.HasValue ?
                new ObjectParameter("ReceivablesID", receivablesID) :
                new ObjectParameter("ReceivablesID", typeof(int));
    
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contract_Receivables_Result>("SP_Contract_Receivables", typeParameter, contractIDParameter, createdByParameter, newAmountCollectedParameter, dateOfReceiptParameter, ticketOpeningAndDateParameter, receivablesIDParameter, paymentIDParameter);
        }
    
        public virtual ObjectResult<SP_ContractEdit_Result> SP_ContractEdit(string type, string iD, string customerName, string contractNumber, string dateOfSign, string money, string paymentMethod, string ifInstall, string ifTransport, string ifIncludeTax, string deliveryTime, string conditionsOfbreachOfContract, string summary, string createdBy, string statusID, string createdTimeStart, string createdTimeEnd, Nullable<decimal> amountCollected, string productOrderStatus, string reviewStatus, string depositAmount, string deliveryAmount, string installationAmount, string acceptanceAmount, string qualityAssuranceAmount, string applierCode, string address, string contact, string tel, string mobile, string fax, string bank, string account, string representative, string principal, string isCustomer)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var dateOfSignParameter = dateOfSign != null ?
                new ObjectParameter("DateOfSign", dateOfSign) :
                new ObjectParameter("DateOfSign", typeof(string));
    
            var moneyParameter = money != null ?
                new ObjectParameter("Money", money) :
                new ObjectParameter("Money", typeof(string));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var ifInstallParameter = ifInstall != null ?
                new ObjectParameter("IfInstall", ifInstall) :
                new ObjectParameter("IfInstall", typeof(string));
    
            var ifTransportParameter = ifTransport != null ?
                new ObjectParameter("IfTransport", ifTransport) :
                new ObjectParameter("IfTransport", typeof(string));
    
            var ifIncludeTaxParameter = ifIncludeTax != null ?
                new ObjectParameter("IfIncludeTax", ifIncludeTax) :
                new ObjectParameter("IfIncludeTax", typeof(string));
    
            var deliveryTimeParameter = deliveryTime != null ?
                new ObjectParameter("DeliveryTime", deliveryTime) :
                new ObjectParameter("DeliveryTime", typeof(string));
    
            var conditionsOfbreachOfContractParameter = conditionsOfbreachOfContract != null ?
                new ObjectParameter("ConditionsOfbreachOfContract", conditionsOfbreachOfContract) :
                new ObjectParameter("ConditionsOfbreachOfContract", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart != null ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var amountCollectedParameter = amountCollected.HasValue ?
                new ObjectParameter("AmountCollected", amountCollected) :
                new ObjectParameter("AmountCollected", typeof(decimal));
    
            var productOrderStatusParameter = productOrderStatus != null ?
                new ObjectParameter("ProductOrderStatus", productOrderStatus) :
                new ObjectParameter("ProductOrderStatus", typeof(string));
    
            var reviewStatusParameter = reviewStatus != null ?
                new ObjectParameter("ReviewStatus", reviewStatus) :
                new ObjectParameter("ReviewStatus", typeof(string));
    
            var depositAmountParameter = depositAmount != null ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(string));
    
            var deliveryAmountParameter = deliveryAmount != null ?
                new ObjectParameter("DeliveryAmount", deliveryAmount) :
                new ObjectParameter("DeliveryAmount", typeof(string));
    
            var installationAmountParameter = installationAmount != null ?
                new ObjectParameter("InstallationAmount", installationAmount) :
                new ObjectParameter("InstallationAmount", typeof(string));
    
            var acceptanceAmountParameter = acceptanceAmount != null ?
                new ObjectParameter("AcceptanceAmount", acceptanceAmount) :
                new ObjectParameter("AcceptanceAmount", typeof(string));
    
            var qualityAssuranceAmountParameter = qualityAssuranceAmount != null ?
                new ObjectParameter("QualityAssuranceAmount", qualityAssuranceAmount) :
                new ObjectParameter("QualityAssuranceAmount", typeof(string));
    
            var applierCodeParameter = applierCode != null ?
                new ObjectParameter("ApplierCode", applierCode) :
                new ObjectParameter("ApplierCode", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var representativeParameter = representative != null ?
                new ObjectParameter("Representative", representative) :
                new ObjectParameter("Representative", typeof(string));
    
            var principalParameter = principal != null ?
                new ObjectParameter("Principal", principal) :
                new ObjectParameter("Principal", typeof(string));
    
            var isCustomerParameter = isCustomer != null ?
                new ObjectParameter("IsCustomer", isCustomer) :
                new ObjectParameter("IsCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ContractEdit_Result>("SP_ContractEdit", typeParameter, iDParameter, customerNameParameter, contractNumberParameter, dateOfSignParameter, moneyParameter, paymentMethodParameter, ifInstallParameter, ifTransportParameter, ifIncludeTaxParameter, deliveryTimeParameter, conditionsOfbreachOfContractParameter, summaryParameter, createdByParameter, statusIDParameter, createdTimeStartParameter, createdTimeEndParameter, amountCollectedParameter, productOrderStatusParameter, reviewStatusParameter, depositAmountParameter, deliveryAmountParameter, installationAmountParameter, acceptanceAmountParameter, qualityAssuranceAmountParameter, applierCodeParameter, addressParameter, contactParameter, telParameter, mobileParameter, faxParameter, bankParameter, accountParameter, representativeParameter, principalParameter, isCustomerParameter);
        }
    
        public virtual int SP_ContractEdit__OLD(string type, Nullable<int> iD, string customerName, string contractNumber, Nullable<System.TimeSpan> dateOfSign, Nullable<decimal> money, string paymentMethod, string ifInstall, string ifTransport, string ifIncludeTax, string deliveryTime, string conditionsOfbreachOfContract, string summary, string createdBy, Nullable<System.DateTime> createdTime, string statusID, Nullable<System.DateTime> createdTimeStart, Nullable<System.DateTime> createdTimeEnd, Nullable<decimal> amountCollected, string productOrderStatus)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var dateOfSignParameter = dateOfSign.HasValue ?
                new ObjectParameter("DateOfSign", dateOfSign) :
                new ObjectParameter("DateOfSign", typeof(System.TimeSpan));
    
            var moneyParameter = money.HasValue ?
                new ObjectParameter("Money", money) :
                new ObjectParameter("Money", typeof(decimal));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var ifInstallParameter = ifInstall != null ?
                new ObjectParameter("IfInstall", ifInstall) :
                new ObjectParameter("IfInstall", typeof(string));
    
            var ifTransportParameter = ifTransport != null ?
                new ObjectParameter("IfTransport", ifTransport) :
                new ObjectParameter("IfTransport", typeof(string));
    
            var ifIncludeTaxParameter = ifIncludeTax != null ?
                new ObjectParameter("IfIncludeTax", ifIncludeTax) :
                new ObjectParameter("IfIncludeTax", typeof(string));
    
            var deliveryTimeParameter = deliveryTime != null ?
                new ObjectParameter("DeliveryTime", deliveryTime) :
                new ObjectParameter("DeliveryTime", typeof(string));
    
            var conditionsOfbreachOfContractParameter = conditionsOfbreachOfContract != null ?
                new ObjectParameter("ConditionsOfbreachOfContract", conditionsOfbreachOfContract) :
                new ObjectParameter("ConditionsOfbreachOfContract", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdTimeParameter = createdTime.HasValue ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(System.DateTime));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart.HasValue ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(System.DateTime));
    
            var createdTimeEndParameter = createdTimeEnd.HasValue ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(System.DateTime));
    
            var amountCollectedParameter = amountCollected.HasValue ?
                new ObjectParameter("AmountCollected", amountCollected) :
                new ObjectParameter("AmountCollected", typeof(decimal));
    
            var productOrderStatusParameter = productOrderStatus != null ?
                new ObjectParameter("ProductOrderStatus", productOrderStatus) :
                new ObjectParameter("ProductOrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ContractEdit__OLD", typeParameter, iDParameter, customerNameParameter, contractNumberParameter, dateOfSignParameter, moneyParameter, paymentMethodParameter, ifInstallParameter, ifTransportParameter, ifIncludeTaxParameter, deliveryTimeParameter, conditionsOfbreachOfContractParameter, summaryParameter, createdByParameter, createdTimeParameter, statusIDParameter, createdTimeStartParameter, createdTimeEndParameter, amountCollectedParameter, productOrderStatusParameter);
        }
    
        public virtual ObjectResult<SP_ContractEdit_checkContractDetail_Result> SP_ContractEdit_checkContractDetail(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ContractEdit_checkContractDetail_Result>("SP_ContractEdit_checkContractDetail", iDParameter);
        }
    
        public virtual int SP_ContractEdit2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ContractEdit2");
        }
    
        public virtual ObjectResult<SP_ContractEdit3_Result> SP_ContractEdit3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ContractEdit3_Result>("SP_ContractEdit3");
        }
    
        public virtual ObjectResult<SP_ContractEdits_Result> SP_ContractEdits(string type, Nullable<int> iD, string customerName, string contractNumber, Nullable<System.TimeSpan> dateOfSign, Nullable<decimal> money, string paymentMethod, string ifInstall, string ifTransport, string ifIncludeTax, string deliveryTime, string conditionsOfbreachOfContract, string summary, string createdBy, Nullable<System.DateTime> createdTime, string statusID, Nullable<System.DateTime> createdTimeStart, Nullable<System.DateTime> createdTimeEnd, Nullable<decimal> amountCollected, string productOrderStatus)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var dateOfSignParameter = dateOfSign.HasValue ?
                new ObjectParameter("DateOfSign", dateOfSign) :
                new ObjectParameter("DateOfSign", typeof(System.TimeSpan));
    
            var moneyParameter = money.HasValue ?
                new ObjectParameter("Money", money) :
                new ObjectParameter("Money", typeof(decimal));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var ifInstallParameter = ifInstall != null ?
                new ObjectParameter("IfInstall", ifInstall) :
                new ObjectParameter("IfInstall", typeof(string));
    
            var ifTransportParameter = ifTransport != null ?
                new ObjectParameter("IfTransport", ifTransport) :
                new ObjectParameter("IfTransport", typeof(string));
    
            var ifIncludeTaxParameter = ifIncludeTax != null ?
                new ObjectParameter("IfIncludeTax", ifIncludeTax) :
                new ObjectParameter("IfIncludeTax", typeof(string));
    
            var deliveryTimeParameter = deliveryTime != null ?
                new ObjectParameter("DeliveryTime", deliveryTime) :
                new ObjectParameter("DeliveryTime", typeof(string));
    
            var conditionsOfbreachOfContractParameter = conditionsOfbreachOfContract != null ?
                new ObjectParameter("ConditionsOfbreachOfContract", conditionsOfbreachOfContract) :
                new ObjectParameter("ConditionsOfbreachOfContract", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdTimeParameter = createdTime.HasValue ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(System.DateTime));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var createdTimeStartParameter = createdTimeStart.HasValue ?
                new ObjectParameter("CreatedTimeStart", createdTimeStart) :
                new ObjectParameter("CreatedTimeStart", typeof(System.DateTime));
    
            var createdTimeEndParameter = createdTimeEnd.HasValue ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(System.DateTime));
    
            var amountCollectedParameter = amountCollected.HasValue ?
                new ObjectParameter("AmountCollected", amountCollected) :
                new ObjectParameter("AmountCollected", typeof(decimal));
    
            var productOrderStatusParameter = productOrderStatus != null ?
                new ObjectParameter("ProductOrderStatus", productOrderStatus) :
                new ObjectParameter("ProductOrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ContractEdits_Result>("SP_ContractEdits", typeParameter, iDParameter, customerNameParameter, contractNumberParameter, dateOfSignParameter, moneyParameter, paymentMethodParameter, ifInstallParameter, ifTransportParameter, ifIncludeTaxParameter, deliveryTimeParameter, conditionsOfbreachOfContractParameter, summaryParameter, createdByParameter, createdTimeParameter, statusIDParameter, createdTimeStartParameter, createdTimeEndParameter, amountCollectedParameter, productOrderStatusParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_PM_ApplierList_Result> SP_PM_ApplierList(string tYPE, Nullable<int> applierID, string applierName, string address, string contact, string tel, string mobile, string createdBy, string status, string category, string level, string advantage)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var applierIDParameter = applierID.HasValue ?
                new ObjectParameter("ApplierID", applierID) :
                new ObjectParameter("ApplierID", typeof(int));
    
            var applierNameParameter = applierName != null ?
                new ObjectParameter("ApplierName", applierName) :
                new ObjectParameter("ApplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var advantageParameter = advantage != null ?
                new ObjectParameter("Advantage", advantage) :
                new ObjectParameter("Advantage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_ApplierList_Result>("SP_PM_ApplierList", tYPEParameter, applierIDParameter, applierNameParameter, addressParameter, contactParameter, telParameter, mobileParameter, createdByParameter, statusParameter, categoryParameter, levelParameter, advantageParameter);
        }
    
        public virtual int SP_PM_BOM(string tYPE, Nullable<int> iD, Nullable<int> partID, string partNumber, string childPartNumber, Nullable<double> childPartQTY, string createdBy, string status, Nullable<double> materialqty, string materialunits, string isunit, string partSpec, string partMaterial)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("PartID", partID) :
                new ObjectParameter("PartID", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var childPartNumberParameter = childPartNumber != null ?
                new ObjectParameter("ChildPartNumber", childPartNumber) :
                new ObjectParameter("ChildPartNumber", typeof(string));
    
            var childPartQTYParameter = childPartQTY.HasValue ?
                new ObjectParameter("ChildPartQTY", childPartQTY) :
                new ObjectParameter("ChildPartQTY", typeof(double));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var materialqtyParameter = materialqty.HasValue ?
                new ObjectParameter("materialqty", materialqty) :
                new ObjectParameter("materialqty", typeof(double));
    
            var materialunitsParameter = materialunits != null ?
                new ObjectParameter("materialunits", materialunits) :
                new ObjectParameter("materialunits", typeof(string));
    
            var isunitParameter = isunit != null ?
                new ObjectParameter("isunit", isunit) :
                new ObjectParameter("isunit", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_BOM", tYPEParameter, iDParameter, partIDParameter, partNumberParameter, childPartNumberParameter, childPartQTYParameter, createdByParameter, statusParameter, materialqtyParameter, materialunitsParameter, isunitParameter, partSpecParameter, partMaterialParameter);
        }
    
        public virtual ObjectResult<SP_PM_Figure_Result> SP_PM_Figure(string tYPE, Nullable<int> iD, string figureNumber, string folderName, string fileName, string createdBy, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_Figure_Result>("SP_PM_Figure", tYPEParameter, iDParameter, figureNumberParameter, folderNameParameter, fileNameParameter, createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_PM_IncomingMaterialToHW_Result> SP_PM_IncomingMaterialToHW(string type, string pONO, Nullable<int> qTY, Nullable<int> materialID, string createdBy, string status)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_IncomingMaterialToHW_Result>("SP_PM_IncomingMaterialToHW", typeParameter, pONOParameter, qTYParameter, materialIDParameter, createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_PM_Material_Result> SP_PM_Material(string type, string pONO, Nullable<int> qTY, Nullable<int> materialID, string createdBy, string status, string desc, string location, string projectName, string materialType, string partNumber, string category1ID, string category2ID, Nullable<int> iQCResult, string workorderNO, string packageName)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var materialTypeParameter = materialType != null ?
                new ObjectParameter("MaterialType", materialType) :
                new ObjectParameter("MaterialType", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var category1IDParameter = category1ID != null ?
                new ObjectParameter("Category1ID", category1ID) :
                new ObjectParameter("Category1ID", typeof(string));
    
            var category2IDParameter = category2ID != null ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(string));
    
            var iQCResultParameter = iQCResult.HasValue ?
                new ObjectParameter("IQCResult", iQCResult) :
                new ObjectParameter("IQCResult", typeof(int));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var packageNameParameter = packageName != null ?
                new ObjectParameter("PackageName", packageName) :
                new ObjectParameter("PackageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_Material_Result>("SP_PM_Material", typeParameter, pONOParameter, qTYParameter, materialIDParameter, createdByParameter, statusParameter, descParameter, locationParameter, projectNameParameter, materialTypeParameter, partNumberParameter, category1IDParameter, category2IDParameter, iQCResultParameter, workorderNOParameter, packageNameParameter);
        }
    
        public virtual ObjectResult<string> SP_PM_Package(string tYPE, Nullable<int> iD, string workorderNO, Nullable<int> totalPCS, string createdEmployee, Nullable<int> packageLabelQTY, string packageNo, string goodsAllocation)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var totalPCSParameter = totalPCS.HasValue ?
                new ObjectParameter("TotalPCS", totalPCS) :
                new ObjectParameter("TotalPCS", typeof(int));
    
            var createdEmployeeParameter = createdEmployee != null ?
                new ObjectParameter("CreatedEmployee", createdEmployee) :
                new ObjectParameter("CreatedEmployee", typeof(string));
    
            var packageLabelQTYParameter = packageLabelQTY.HasValue ?
                new ObjectParameter("PackageLabelQTY", packageLabelQTY) :
                new ObjectParameter("PackageLabelQTY", typeof(int));
    
            var packageNoParameter = packageNo != null ?
                new ObjectParameter("packageNo", packageNo) :
                new ObjectParameter("packageNo", typeof(string));
    
            var goodsAllocationParameter = goodsAllocation != null ?
                new ObjectParameter("GoodsAllocation", goodsAllocation) :
                new ObjectParameter("GoodsAllocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_PM_Package", tYPEParameter, iDParameter, workorderNOParameter, totalPCSParameter, createdEmployeeParameter, packageLabelQTYParameter, packageNoParameter, goodsAllocationParameter);
        }
    
        public virtual int SP_PM_Part(string tYPE, Nullable<int> partID, string partNumber, string figureNumber, string partMaterial, string partSpec, string partDesc, string isUnit, string createdBy, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("PartID", partID) :
                new ObjectParameter("PartID", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partDescParameter = partDesc != null ?
                new ObjectParameter("PartDesc", partDesc) :
                new ObjectParameter("PartDesc", typeof(string));
    
            var isUnitParameter = isUnit != null ?
                new ObjectParameter("IsUnit", isUnit) :
                new ObjectParameter("IsUnit", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_Part", tYPEParameter, partIDParameter, partNumberParameter, figureNumberParameter, partMaterialParameter, partSpecParameter, partDescParameter, isUnitParameter, createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_PM_ProductLine_Result> SP_PM_ProductLine(string tYPE, Nullable<int> lineID, string line, string lineLength, string createdBy, string status, string html, string cuNumber, string cuid)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("lineID", lineID) :
                new ObjectParameter("lineID", typeof(int));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var lineLengthParameter = lineLength != null ?
                new ObjectParameter("LineLength", lineLength) :
                new ObjectParameter("LineLength", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var htmlParameter = html != null ?
                new ObjectParameter("html", html) :
                new ObjectParameter("html", typeof(string));
    
            var cuNumberParameter = cuNumber != null ?
                new ObjectParameter("CuNumber", cuNumber) :
                new ObjectParameter("CuNumber", typeof(string));
    
            var cuidParameter = cuid != null ?
                new ObjectParameter("cuid", cuid) :
                new ObjectParameter("cuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_ProductLine_Result>("SP_PM_ProductLine", tYPEParameter, lineIDParameter, lineParameter, lineLengthParameter, createdByParameter, statusParameter, htmlParameter, cuNumberParameter, cuidParameter);
        }
    
        public virtual ObjectResult<string> SP_PM_ProductMSLogin(string tYPE, string userName, string pWD, string station)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            var stationParameter = station != null ?
                new ObjectParameter("Station", station) :
                new ObjectParameter("Station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_PM_ProductMSLogin", tYPEParameter, userNameParameter, pWDParameter, stationParameter);
        }
    
        public virtual ObjectResult<SP_PM_ProductStation_Result> SP_PM_ProductStation(string tYPE, Nullable<int> stationID, string station, string lineID, string line, string @operator, string stationTypeID, string stationTypeNumber, string stationType, string createdBy, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var stationIDParameter = stationID.HasValue ?
                new ObjectParameter("StationID", stationID) :
                new ObjectParameter("StationID", typeof(int));
    
            var stationParameter = station != null ?
                new ObjectParameter("Station", station) :
                new ObjectParameter("Station", typeof(string));
    
            var lineIDParameter = lineID != null ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var stationTypeIDParameter = stationTypeID != null ?
                new ObjectParameter("StationTypeID", stationTypeID) :
                new ObjectParameter("StationTypeID", typeof(string));
    
            var stationTypeNumberParameter = stationTypeNumber != null ?
                new ObjectParameter("StationTypeNumber", stationTypeNumber) :
                new ObjectParameter("StationTypeNumber", typeof(string));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_ProductStation_Result>("SP_PM_ProductStation", tYPEParameter, stationIDParameter, stationParameter, lineIDParameter, lineParameter, operatorParameter, stationTypeIDParameter, stationTypeNumberParameter, stationTypeParameter, createdByParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_PM_ProductStationType_Result> SP_PM_ProductStationType(string tYPE, Nullable<int> stationTypeID, string stationTypeNumber, string stationType, string createdBy, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var stationTypeIDParameter = stationTypeID.HasValue ?
                new ObjectParameter("StationTypeID", stationTypeID) :
                new ObjectParameter("StationTypeID", typeof(int));
    
            var stationTypeNumberParameter = stationTypeNumber != null ?
                new ObjectParameter("StationTypeNumber", stationTypeNumber) :
                new ObjectParameter("StationTypeNumber", typeof(string));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_ProductStationType_Result>("SP_PM_ProductStationType", tYPEParameter, stationTypeIDParameter, stationTypeNumberParameter, stationTypeParameter, createdByParameter, statusParameter);
        }
    
        public virtual int SP_PM_PurchaseMaterialList(string type, Nullable<int> taskID, string figureNumber, string partNumber, string partSpec, string partMaterial, Nullable<int> qTY, Nullable<double> purchaseQTY, string note, string listType, string purchaseUnits, string iDs, string pONO, Nullable<int> actPurchaseQTY, string applier, Nullable<double> price, Nullable<System.DateTime> starttime, Nullable<System.DateTime> endtime, Nullable<int> statusid, string pONOID, Nullable<int> materialID, string iQC, Nullable<int> purchasepcs, Nullable<int> inboundPCS, string level)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var purchaseQTYParameter = purchaseQTY.HasValue ?
                new ObjectParameter("PurchaseQTY", purchaseQTY) :
                new ObjectParameter("PurchaseQTY", typeof(double));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            var purchaseUnitsParameter = purchaseUnits != null ?
                new ObjectParameter("PurchaseUnits", purchaseUnits) :
                new ObjectParameter("PurchaseUnits", typeof(string));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var actPurchaseQTYParameter = actPurchaseQTY.HasValue ?
                new ObjectParameter("ActPurchaseQTY", actPurchaseQTY) :
                new ObjectParameter("ActPurchaseQTY", typeof(int));
    
            var applierParameter = applier != null ?
                new ObjectParameter("Applier", applier) :
                new ObjectParameter("Applier", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("Starttime", starttime) :
                new ObjectParameter("Starttime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("Endtime", endtime) :
                new ObjectParameter("Endtime", typeof(System.DateTime));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var pONOIDParameter = pONOID != null ?
                new ObjectParameter("PONOID", pONOID) :
                new ObjectParameter("PONOID", typeof(string));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var iQCParameter = iQC != null ?
                new ObjectParameter("IQC", iQC) :
                new ObjectParameter("IQC", typeof(string));
    
            var purchasepcsParameter = purchasepcs.HasValue ?
                new ObjectParameter("Purchasepcs", purchasepcs) :
                new ObjectParameter("Purchasepcs", typeof(int));
    
            var inboundPCSParameter = inboundPCS.HasValue ?
                new ObjectParameter("InboundPCS", inboundPCS) :
                new ObjectParameter("InboundPCS", typeof(int));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_PurchaseMaterialList", typeParameter, taskIDParameter, figureNumberParameter, partNumberParameter, partSpecParameter, partMaterialParameter, qTYParameter, purchaseQTYParameter, noteParameter, listTypeParameter, purchaseUnitsParameter, iDsParameter, pONOParameter, actPurchaseQTYParameter, applierParameter, priceParameter, starttimeParameter, endtimeParameter, statusidParameter, pONOIDParameter, materialIDParameter, iQCParameter, purchasepcsParameter, inboundPCSParameter, levelParameter);
        }
    
        public virtual int SP_PM_Route(string tYPE, Nullable<int> iD, string route, string partNumber, Nullable<int> sortID, string stationType, Nullable<int> workHours, Nullable<int> workHours2, string require, string createdBy, string status, string routeSaveAS)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var sortIDParameter = sortID.HasValue ?
                new ObjectParameter("SortID", sortID) :
                new ObjectParameter("SortID", typeof(int));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var workHoursParameter = workHours.HasValue ?
                new ObjectParameter("WorkHours", workHours) :
                new ObjectParameter("WorkHours", typeof(int));
    
            var workHours2Parameter = workHours2.HasValue ?
                new ObjectParameter("WorkHours2", workHours2) :
                new ObjectParameter("WorkHours2", typeof(int));
    
            var requireParameter = require != null ?
                new ObjectParameter("require", require) :
                new ObjectParameter("require", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var routeSaveASParameter = routeSaveAS != null ?
                new ObjectParameter("RouteSaveAS", routeSaveAS) :
                new ObjectParameter("RouteSaveAS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_Route", tYPEParameter, iDParameter, routeParameter, partNumberParameter, sortIDParameter, stationTypeParameter, workHoursParameter, workHours2Parameter, requireParameter, createdByParameter, statusParameter, routeSaveASParameter);
        }
    
        public virtual ObjectResult<string> SP_PM_Shipment(string tYPE, Nullable<int> shipNoticeID, string shipNoticeNo, Nullable<int> productDetailID, string createdBy, string package)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var shipNoticeIDParameter = shipNoticeID.HasValue ?
                new ObjectParameter("ShipNoticeID", shipNoticeID) :
                new ObjectParameter("ShipNoticeID", typeof(int));
    
            var shipNoticeNoParameter = shipNoticeNo != null ?
                new ObjectParameter("ShipNoticeNo", shipNoticeNo) :
                new ObjectParameter("ShipNoticeNo", typeof(string));
    
            var productDetailIDParameter = productDetailID.HasValue ?
                new ObjectParameter("ProductDetailID", productDetailID) :
                new ObjectParameter("ProductDetailID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_PM_Shipment", tYPEParameter, shipNoticeIDParameter, shipNoticeNoParameter, productDetailIDParameter, createdByParameter, packageParameter);
        }
    
        public virtual ObjectResult<SP_PM_WH_Result> SP_PM_WH(string tYPE, Nullable<int> iD, string wH, Nullable<int> wHID, string wHArea, Nullable<int> wHAreaID, string wHStorageLocation, Nullable<int> wHStorageLocationID, string wHGoodsAllocation, Nullable<int> wHGoodsAllocationID, string createdBy, string status, string desc)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            var wHIDParameter = wHID.HasValue ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(int));
    
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var wHAreaIDParameter = wHAreaID.HasValue ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(int));
    
            var wHStorageLocationParameter = wHStorageLocation != null ?
                new ObjectParameter("WHStorageLocation", wHStorageLocation) :
                new ObjectParameter("WHStorageLocation", typeof(string));
    
            var wHStorageLocationIDParameter = wHStorageLocationID.HasValue ?
                new ObjectParameter("WHStorageLocationID", wHStorageLocationID) :
                new ObjectParameter("WHStorageLocationID", typeof(int));
    
            var wHGoodsAllocationParameter = wHGoodsAllocation != null ?
                new ObjectParameter("WHGoodsAllocation", wHGoodsAllocation) :
                new ObjectParameter("WHGoodsAllocation", typeof(string));
    
            var wHGoodsAllocationIDParameter = wHGoodsAllocationID.HasValue ?
                new ObjectParameter("WHGoodsAllocationID", wHGoodsAllocationID) :
                new ObjectParameter("WHGoodsAllocationID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_WH_Result>("SP_PM_WH", tYPEParameter, iDParameter, wHParameter, wHIDParameter, wHAreaParameter, wHAreaIDParameter, wHStorageLocationParameter, wHStorageLocationIDParameter, wHGoodsAllocationParameter, wHGoodsAllocationIDParameter, createdByParameter, statusParameter, descParameter);
        }
    
        public virtual int SP_PM_Workorder(string tYPE, Nullable<int> taskID, string workorderNO, string partNumber, string parentPartNumber, Nullable<int> totalPCS, Nullable<int> qTYofOneSet, Nullable<int> totalQTY, Nullable<int> completedQTY, Nullable<System.DateTime> dueDay, Nullable<System.DateTime> createTime, string createdEmployee, string status, string customerName, string contractNumber, Nullable<System.DateTime> createTimeTo, string stationType, string goodsAllocation, Nullable<int> iD)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var parentPartNumberParameter = parentPartNumber != null ?
                new ObjectParameter("ParentPartNumber", parentPartNumber) :
                new ObjectParameter("ParentPartNumber", typeof(string));
    
            var totalPCSParameter = totalPCS.HasValue ?
                new ObjectParameter("TotalPCS", totalPCS) :
                new ObjectParameter("TotalPCS", typeof(int));
    
            var qTYofOneSetParameter = qTYofOneSet.HasValue ?
                new ObjectParameter("QTYofOneSet", qTYofOneSet) :
                new ObjectParameter("QTYofOneSet", typeof(int));
    
            var totalQTYParameter = totalQTY.HasValue ?
                new ObjectParameter("TotalQTY", totalQTY) :
                new ObjectParameter("TotalQTY", typeof(int));
    
            var completedQTYParameter = completedQTY.HasValue ?
                new ObjectParameter("CompletedQTY", completedQTY) :
                new ObjectParameter("CompletedQTY", typeof(int));
    
            var dueDayParameter = dueDay.HasValue ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(System.DateTime));
    
            var createTimeParameter = createTime.HasValue ?
                new ObjectParameter("CreateTime", createTime) :
                new ObjectParameter("CreateTime", typeof(System.DateTime));
    
            var createdEmployeeParameter = createdEmployee != null ?
                new ObjectParameter("CreatedEmployee", createdEmployee) :
                new ObjectParameter("CreatedEmployee", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var createTimeToParameter = createTimeTo.HasValue ?
                new ObjectParameter("CreateTimeTo", createTimeTo) :
                new ObjectParameter("CreateTimeTo", typeof(System.DateTime));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var goodsAllocationParameter = goodsAllocation != null ?
                new ObjectParameter("GoodsAllocation", goodsAllocation) :
                new ObjectParameter("GoodsAllocation", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_Workorder", tYPEParameter, taskIDParameter, workorderNOParameter, partNumberParameter, parentPartNumberParameter, totalPCSParameter, qTYofOneSetParameter, totalQTYParameter, completedQTYParameter, dueDayParameter, createTimeParameter, createdEmployeeParameter, statusParameter, customerNameParameter, contractNumberParameter, createTimeToParameter, stationTypeParameter, goodsAllocationParameter, iDParameter);
        }
    
        public virtual ObjectResult<SP_PM_WorkOrderHistory_Result> SP_PM_WorkOrderHistory(string tYPE, Nullable<int> wordorderDetailID, Nullable<int> workorderID, string workorder, string station, Nullable<int> stationID, string stationType, Nullable<int> stationTypeID, Nullable<int> recievedPCS, Nullable<int> completedPCS, Nullable<int> failedPCS, string employee, string qAemployee, string note, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var wordorderDetailIDParameter = wordorderDetailID.HasValue ?
                new ObjectParameter("WordorderDetailID", wordorderDetailID) :
                new ObjectParameter("WordorderDetailID", typeof(int));
    
            var workorderIDParameter = workorderID.HasValue ?
                new ObjectParameter("WorkorderID", workorderID) :
                new ObjectParameter("WorkorderID", typeof(int));
    
            var workorderParameter = workorder != null ?
                new ObjectParameter("Workorder", workorder) :
                new ObjectParameter("Workorder", typeof(string));
    
            var stationParameter = station != null ?
                new ObjectParameter("Station", station) :
                new ObjectParameter("Station", typeof(string));
    
            var stationIDParameter = stationID.HasValue ?
                new ObjectParameter("StationID", stationID) :
                new ObjectParameter("StationID", typeof(int));
    
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var stationTypeIDParameter = stationTypeID.HasValue ?
                new ObjectParameter("StationTypeID", stationTypeID) :
                new ObjectParameter("StationTypeID", typeof(int));
    
            var recievedPCSParameter = recievedPCS.HasValue ?
                new ObjectParameter("RecievedPCS", recievedPCS) :
                new ObjectParameter("RecievedPCS", typeof(int));
    
            var completedPCSParameter = completedPCS.HasValue ?
                new ObjectParameter("completedPCS", completedPCS) :
                new ObjectParameter("completedPCS", typeof(int));
    
            var failedPCSParameter = failedPCS.HasValue ?
                new ObjectParameter("failedPCS", failedPCS) :
                new ObjectParameter("failedPCS", typeof(int));
    
            var employeeParameter = employee != null ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(string));
    
            var qAemployeeParameter = qAemployee != null ?
                new ObjectParameter("QAemployee", qAemployee) :
                new ObjectParameter("QAemployee", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PM_WorkOrderHistory_Result>("SP_PM_WorkOrderHistory", tYPEParameter, wordorderDetailIDParameter, workorderIDParameter, workorderParameter, stationParameter, stationIDParameter, stationTypeParameter, stationTypeIDParameter, recievedPCSParameter, completedPCSParameter, failedPCSParameter, employeeParameter, qAemployeeParameter, noteParameter, statusParameter);
        }
    
        public virtual int SP_PM_WorkOrderMaterialPickList(string tYPE, Nullable<int> iD, Nullable<int> workorderID, string workorder, string figureNumber, string partNumber, string partMaterial, string partSpec, string requirementQTY, Nullable<int> recievedPCS, Nullable<int> units, string employee, string status)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var workorderIDParameter = workorderID.HasValue ?
                new ObjectParameter("WorkorderID", workorderID) :
                new ObjectParameter("WorkorderID", typeof(int));
    
            var workorderParameter = workorder != null ?
                new ObjectParameter("Workorder", workorder) :
                new ObjectParameter("Workorder", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var requirementQTYParameter = requirementQTY != null ?
                new ObjectParameter("RequirementQTY", requirementQTY) :
                new ObjectParameter("RequirementQTY", typeof(string));
    
            var recievedPCSParameter = recievedPCS.HasValue ?
                new ObjectParameter("RecievedPCS", recievedPCS) :
                new ObjectParameter("RecievedPCS", typeof(int));
    
            var unitsParameter = units.HasValue ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(int));
    
            var employeeParameter = employee != null ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PM_WorkOrderMaterialPickList", tYPEParameter, iDParameter, workorderIDParameter, workorderParameter, figureNumberParameter, partNumberParameter, partMaterialParameter, partSpecParameter, requirementQTYParameter, recievedPCSParameter, unitsParameter, employeeParameter, statusParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_Warehousesetup_Result> SP_Warehousesetup(string type, string warehouseName, string createdTimestart, string createdTimeEnd, Nullable<int> id, string description, string createdBy, string statusID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var warehouseNameParameter = warehouseName != null ?
                new ObjectParameter("WarehouseName", warehouseName) :
                new ObjectParameter("WarehouseName", typeof(string));
    
            var createdTimestartParameter = createdTimestart != null ?
                new ObjectParameter("CreatedTimestart", createdTimestart) :
                new ObjectParameter("CreatedTimestart", typeof(string));
    
            var createdTimeEndParameter = createdTimeEnd != null ?
                new ObjectParameter("CreatedTimeEnd", createdTimeEnd) :
                new ObjectParameter("CreatedTimeEnd", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Warehousesetup_Result>("SP_Warehousesetup", typeParameter, warehouseNameParameter, createdTimestartParameter, createdTimeEndParameter, idParameter, descriptionParameter, createdByParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<SP_Warehousesetup_area_Result> SP_Warehousesetup_area(string type, Nullable<int> wHID, string wHName, string wHArea, string description, string createdBy, string statusID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var wHIDParameter = wHID.HasValue ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(int));
    
            var wHNameParameter = wHName != null ?
                new ObjectParameter("WHName", wHName) :
                new ObjectParameter("WHName", typeof(string));
    
            var wHAreaParameter = wHArea != null ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Warehousesetup_area_Result>("SP_Warehousesetup_area", typeParameter, wHIDParameter, wHNameParameter, wHAreaParameter, descriptionParameter, createdByParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<SP_Warehousesetup_WHGoodsAl_Result> SP_Warehousesetup_WHGoodsAl(string type, Nullable<int> storageLocationID, string storageName, string name, string description, string createdBy, string statusID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var storageLocationIDParameter = storageLocationID.HasValue ?
                new ObjectParameter("StorageLocationID", storageLocationID) :
                new ObjectParameter("StorageLocationID", typeof(int));
    
            var storageNameParameter = storageName != null ?
                new ObjectParameter("StorageName", storageName) :
                new ObjectParameter("StorageName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Warehousesetup_WHGoodsAl_Result>("SP_Warehousesetup_WHGoodsAl", typeParameter, storageLocationIDParameter, storageNameParameter, nameParameter, descriptionParameter, createdByParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<SP_Warehousesetup_WHStorage_Result> SP_Warehousesetup_WHStorage(string type, Nullable<int> wHAreaID, string name, string description, string wHAreaName, string createdBy, string statusID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var wHAreaIDParameter = wHAreaID.HasValue ?
                new ObjectParameter("WHAreaID", wHAreaID) :
                new ObjectParameter("WHAreaID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var wHAreaNameParameter = wHAreaName != null ?
                new ObjectParameter("WHAreaName", wHAreaName) :
                new ObjectParameter("WHAreaName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Warehousesetup_WHStorage_Result>("SP_Warehousesetup_WHStorage", typeParameter, wHAreaIDParameter, nameParameter, descriptionParameter, wHAreaNameParameter, createdByParameter, statusIDParameter);
        }
    
        public virtual int StationDetails(string station, string workOrderName, string name, string line, Nullable<int> recievedPCS, string type, Nullable<int> id)
        {
            var stationParameter = station != null ?
                new ObjectParameter("Station", station) :
                new ObjectParameter("Station", typeof(string));
    
            var workOrderNameParameter = workOrderName != null ?
                new ObjectParameter("WorkOrderName", workOrderName) :
                new ObjectParameter("WorkOrderName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var recievedPCSParameter = recievedPCS.HasValue ?
                new ObjectParameter("RecievedPCS", recievedPCS) :
                new ObjectParameter("RecievedPCS", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StationDetails", stationParameter, workOrderNameParameter, nameParameter, lineParameter, recievedPCSParameter, typeParameter, idParameter);
        }
    
        public virtual ObjectResult<StationType_Result> StationType(string stationType)
        {
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StationType_Result>("StationType", stationTypeParameter);
        }
    
        public virtual int Statistics_Department(string type, string owner, string overduday, string depart)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var overdudayParameter = overduday != null ?
                new ObjectParameter("Overduday", overduday) :
                new ObjectParameter("Overduday", typeof(string));
    
            var departParameter = depart != null ?
                new ObjectParameter("Depart", depart) :
                new ObjectParameter("Depart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Statistics_Department", typeParameter, ownerParameter, overdudayParameter, departParameter);
        }
    
        public virtual ObjectResult<Statistics_Departmentlist_Result> Statistics_Departmentlist(string owner, string depart)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var departParameter = depart != null ?
                new ObjectParameter("Depart", depart) :
                new ObjectParameter("Depart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistics_Departmentlist_Result>("Statistics_Departmentlist", ownerParameter, departParameter);
        }
    
        public virtual int Statistics_Scroe(string owner, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Statistics_Scroe", ownerParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Statistics_Scroechart_Result> Statistics_Scroechart(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistics_Scroechart_Result>("Statistics_Scroechart", nameParameter);
        }
    
        public virtual ObjectResult<Statistics_Scroelist_Result> Statistics_Scroelist(string owner, string startTime, string endTime)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistics_Scroelist_Result>("Statistics_Scroelist", ownerParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual int Statistics_TaskAll(string projectName, string owner, string overduday)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var overdudayParameter = overduday != null ?
                new ObjectParameter("Overduday", overduday) :
                new ObjectParameter("Overduday", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Statistics_TaskAll", projectNameParameter, ownerParameter, overdudayParameter);
        }
    
        public virtual ObjectResult<Statistics_TaskAlllist_Result> Statistics_TaskAlllist(string projectName, string owner, string overduday)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var overdudayParameter = overduday != null ?
                new ObjectParameter("Overduday", overduday) :
                new ObjectParameter("Overduday", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistics_TaskAlllist_Result>("Statistics_TaskAlllist", projectNameParameter, ownerParameter, overdudayParameter);
        }
    
        public virtual ObjectResult<Statisticschar_Departmentlist_Result> Statisticschar_Departmentlist(string department)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statisticschar_Departmentlist_Result>("Statisticschar_Departmentlist", departmentParameter);
        }
    
        public virtual ObjectResult<Summary_Result> Summary(string summaryTid, string summaryMid)
        {
            var summaryTidParameter = summaryTid != null ?
                new ObjectParameter("SummaryTid", summaryTid) :
                new ObjectParameter("SummaryTid", typeof(string));
    
            var summaryMidParameter = summaryMid != null ?
                new ObjectParameter("SummaryMid", summaryMid) :
                new ObjectParameter("SummaryMid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Summary_Result>("Summary", summaryTidParameter, summaryMidParameter);
        }
    
        public virtual ObjectResult<Supplier_MaterialBinding_Result> Supplier_MaterialBinding(string type, string partNumber, Nullable<int> id, Nullable<int> applierProductType)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var applierProductTypeParameter = applierProductType.HasValue ?
                new ObjectParameter("ApplierProductType", applierProductType) :
                new ObjectParameter("ApplierProductType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplier_MaterialBinding_Result>("Supplier_MaterialBinding", typeParameter, partNumberParameter, idParameter, applierProductTypeParameter);
        }
    
        public virtual ObjectResult<TaskCheck_Result> TaskCheck(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskCheck_Result>("TaskCheck", taskIDParameter);
        }
    
        public virtual int TaskForChangeQualifiedOwner(string owner, string taskID)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var taskIDParameter = taskID != null ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaskForChangeQualifiedOwner", ownerParameter, taskIDParameter);
        }
    
        public virtual ObjectResult<TaskMapingPartCheck_Result> TaskMapingPartCheck(string projectName)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskMapingPartCheck_Result>("TaskMapingPartCheck", projectNameParameter);
        }
    
        public virtual ObjectResult<TaskMapingWOCheck_Result> TaskMapingWOCheck(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskMapingWOCheck_Result>("TaskMapingWOCheck", taskIDParameter);
        }
    
        public virtual int UpdateBOM(Nullable<int> id, string dosage, string unit)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dosageParameter = dosage != null ?
                new ObjectParameter("dosage", dosage) :
                new ObjectParameter("dosage", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBOM", idParameter, dosageParameter, unitParameter);
        }
    
        public virtual int UpdateCompletedMachineDesign(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCompletedMachineDesign", taskIDParameter);
        }
    
        public virtual int updateIssueCompleted(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateIssueCompleted", taskIDParameter);
        }
    
        public virtual int updatelevel2Task(Nullable<int> taskID, string priorityCode, string taskName, string productName, string productSpec, string owner, Nullable<double> taskScore, string dueDay, string taskDesc, string machineDesignOwner, string machineDesignBaseTime, string machineDesignBaseScore, string qualifiedOwner, string qualifiedBaseTime, string qualifiedBaseScore, string issueOwner, string issueBaseTime, string issueBaseScore, string note, string electricalOwner, string electricalDesignBaseTime, string electricalDesignBaseScore, string taskType)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var priorityCodeParameter = priorityCode != null ?
                new ObjectParameter("PriorityCode", priorityCode) :
                new ObjectParameter("PriorityCode", typeof(string));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productSpecParameter = productSpec != null ?
                new ObjectParameter("ProductSpec", productSpec) :
                new ObjectParameter("ProductSpec", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var taskScoreParameter = taskScore.HasValue ?
                new ObjectParameter("TaskScore", taskScore) :
                new ObjectParameter("TaskScore", typeof(double));
    
            var dueDayParameter = dueDay != null ?
                new ObjectParameter("DueDay", dueDay) :
                new ObjectParameter("DueDay", typeof(string));
    
            var taskDescParameter = taskDesc != null ?
                new ObjectParameter("TaskDesc", taskDesc) :
                new ObjectParameter("TaskDesc", typeof(string));
    
            var machineDesignOwnerParameter = machineDesignOwner != null ?
                new ObjectParameter("MachineDesignOwner", machineDesignOwner) :
                new ObjectParameter("MachineDesignOwner", typeof(string));
    
            var machineDesignBaseTimeParameter = machineDesignBaseTime != null ?
                new ObjectParameter("MachineDesignBaseTime", machineDesignBaseTime) :
                new ObjectParameter("MachineDesignBaseTime", typeof(string));
    
            var machineDesignBaseScoreParameter = machineDesignBaseScore != null ?
                new ObjectParameter("MachineDesignBaseScore", machineDesignBaseScore) :
                new ObjectParameter("MachineDesignBaseScore", typeof(string));
    
            var qualifiedOwnerParameter = qualifiedOwner != null ?
                new ObjectParameter("QualifiedOwner", qualifiedOwner) :
                new ObjectParameter("QualifiedOwner", typeof(string));
    
            var qualifiedBaseTimeParameter = qualifiedBaseTime != null ?
                new ObjectParameter("QualifiedBaseTime", qualifiedBaseTime) :
                new ObjectParameter("QualifiedBaseTime", typeof(string));
    
            var qualifiedBaseScoreParameter = qualifiedBaseScore != null ?
                new ObjectParameter("QualifiedBaseScore", qualifiedBaseScore) :
                new ObjectParameter("QualifiedBaseScore", typeof(string));
    
            var issueOwnerParameter = issueOwner != null ?
                new ObjectParameter("IssueOwner", issueOwner) :
                new ObjectParameter("IssueOwner", typeof(string));
    
            var issueBaseTimeParameter = issueBaseTime != null ?
                new ObjectParameter("IssueBaseTime", issueBaseTime) :
                new ObjectParameter("IssueBaseTime", typeof(string));
    
            var issueBaseScoreParameter = issueBaseScore != null ?
                new ObjectParameter("IssueBaseScore", issueBaseScore) :
                new ObjectParameter("IssueBaseScore", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var electricalOwnerParameter = electricalOwner != null ?
                new ObjectParameter("electricalOwner", electricalOwner) :
                new ObjectParameter("electricalOwner", typeof(string));
    
            var electricalDesignBaseTimeParameter = electricalDesignBaseTime != null ?
                new ObjectParameter("electricalDesignBaseTime", electricalDesignBaseTime) :
                new ObjectParameter("electricalDesignBaseTime", typeof(string));
    
            var electricalDesignBaseScoreParameter = electricalDesignBaseScore != null ?
                new ObjectParameter("electricalDesignBaseScore", electricalDesignBaseScore) :
                new ObjectParameter("electricalDesignBaseScore", typeof(string));
    
            var taskTypeParameter = taskType != null ?
                new ObjectParameter("TaskType", taskType) :
                new ObjectParameter("TaskType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatelevel2Task", taskIDParameter, priorityCodeParameter, taskNameParameter, productNameParameter, productSpecParameter, ownerParameter, taskScoreParameter, dueDayParameter, taskDescParameter, machineDesignOwnerParameter, machineDesignBaseTimeParameter, machineDesignBaseScoreParameter, qualifiedOwnerParameter, qualifiedBaseTimeParameter, qualifiedBaseScoreParameter, issueOwnerParameter, issueBaseTimeParameter, issueBaseScoreParameter, noteParameter, electricalOwnerParameter, electricalDesignBaseTimeParameter, electricalDesignBaseScoreParameter, taskTypeParameter);
        }
    
        public virtual int UpdateMachineDesignConfirm(Nullable<int> taskID, string type)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMachineDesignConfirm", taskIDParameter, typeParameter);
        }
    
        public virtual int UpdatePEcompletedTask(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePEcompletedTask", taskIDParameter);
        }
    
        public virtual int UpdatePmc(string type, string iD, string category1ID, string category2ID, string figureNumber, string partNumber, string partSpec, string partMaterial, string listType)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var category1IDParameter = category1ID != null ?
                new ObjectParameter("Category1ID", category1ID) :
                new ObjectParameter("Category1ID", typeof(string));
    
            var category2IDParameter = category2ID != null ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("figureNumber", figureNumber) :
                new ObjectParameter("figureNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var partMaterialParameter = partMaterial != null ?
                new ObjectParameter("PartMaterial", partMaterial) :
                new ObjectParameter("PartMaterial", typeof(string));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePmc", typeParameter, iDParameter, category1IDParameter, category2IDParameter, figureNumberParameter, partNumberParameter, partSpecParameter, partMaterialParameter, listTypeParameter);
        }
    
        public virtual int UpdatePMCCompleted(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePMCCompleted", taskIDParameter);
        }
    
        public virtual int UpdateProcess(string stationType, Nullable<int> sortID, Nullable<int> workHours, Nullable<int> workHours2, string require, Nullable<int> iD, string createdBy, string routeName, string index)
        {
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var sortIDParameter = sortID.HasValue ?
                new ObjectParameter("SortID", sortID) :
                new ObjectParameter("SortID", typeof(int));
    
            var workHoursParameter = workHours.HasValue ?
                new ObjectParameter("WorkHours", workHours) :
                new ObjectParameter("WorkHours", typeof(int));
    
            var workHours2Parameter = workHours2.HasValue ?
                new ObjectParameter("WorkHours2", workHours2) :
                new ObjectParameter("WorkHours2", typeof(int));
    
            var requireParameter = require != null ?
                new ObjectParameter("require", require) :
                new ObjectParameter("require", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var routeNameParameter = routeName != null ?
                new ObjectParameter("RouteName", routeName) :
                new ObjectParameter("RouteName", typeof(string));
    
            var indexParameter = index != null ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProcess", stationTypeParameter, sortIDParameter, workHoursParameter, workHours2Parameter, requireParameter, iDParameter, createdByParameter, routeNameParameter, indexParameter);
        }
    
        public virtual int UpdatePurchaseQTY(Nullable<int> qTYofPCS, Nullable<int> materialID, Nullable<int> applyPurchasePCS, Nullable<int> taskID, string units, string note, string type, Nullable<int> actPCS, Nullable<int> price, Nullable<int> id)
        {
            var qTYofPCSParameter = qTYofPCS.HasValue ?
                new ObjectParameter("QTYofPCS", qTYofPCS) :
                new ObjectParameter("QTYofPCS", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var applyPurchasePCSParameter = applyPurchasePCS.HasValue ?
                new ObjectParameter("ApplyPurchasePCS", applyPurchasePCS) :
                new ObjectParameter("ApplyPurchasePCS", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var unitsParameter = units != null ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var actPCSParameter = actPCS.HasValue ?
                new ObjectParameter("ActPCS", actPCS) :
                new ObjectParameter("ActPCS", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePurchaseQTY", qTYofPCSParameter, materialIDParameter, applyPurchasePCSParameter, taskIDParameter, unitsParameter, noteParameter, typeParameter, actPCSParameter, priceParameter, idParameter);
        }
    
        public virtual int updateQualifiedCompleted(Nullable<int> taskID, string machineDesignScore, string electricalDesignScore, string suggestedPoints)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var machineDesignScoreParameter = machineDesignScore != null ?
                new ObjectParameter("MachineDesignScore", machineDesignScore) :
                new ObjectParameter("MachineDesignScore", typeof(string));
    
            var electricalDesignScoreParameter = electricalDesignScore != null ?
                new ObjectParameter("electricalDesignScore", electricalDesignScore) :
                new ObjectParameter("electricalDesignScore", typeof(string));
    
            var suggestedPointsParameter = suggestedPoints != null ?
                new ObjectParameter("SuggestedPoints", suggestedPoints) :
                new ObjectParameter("SuggestedPoints", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateQualifiedCompleted", taskIDParameter, machineDesignScoreParameter, electricalDesignScoreParameter, suggestedPointsParameter);
        }
    
        public virtual int UpdateTaskForChangeIssueOwner(string owner, string taskID)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var taskIDParameter = taskID != null ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTaskForChangeIssueOwner", ownerParameter, taskIDParameter);
        }
    
        public virtual int UpdateTaskForChangeOwner(string owner, string taskID)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var taskIDParameter = taskID != null ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTaskForChangeOwner", ownerParameter, taskIDParameter);
        }
    
        public virtual int UpdateTaskProgress(Nullable<int> taskID, Nullable<int> item, string from, string to, string content, string completionDescription)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(int));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var completionDescriptionParameter = completionDescription != null ?
                new ObjectParameter("CompletionDescription", completionDescription) :
                new ObjectParameter("CompletionDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTaskProgress", taskIDParameter, itemParameter, fromParameter, toParameter, contentParameter, completionDescriptionParameter);
        }
    
        public virtual int UpdateUser(string user, string pwd, string id)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userParameter, pwdParameter, idParameter);
        }
    
        public virtual ObjectResult<UploadTheDrawings_Result> UploadTheDrawings(string type, string figureNumber, string folderName, string fileName, string createdBy)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var figureNumberParameter = figureNumber != null ?
                new ObjectParameter("FigureNumber", figureNumber) :
                new ObjectParameter("FigureNumber", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadTheDrawings_Result>("UploadTheDrawings", typeParameter, figureNumberParameter, folderNameParameter, fileNameParameter, createdByParameter);
        }
    
        public virtual int UpMaterialDefaultStu(string mid, string appid, string cuid, string type, string money, string createBy, string price, string sum, Nullable<int> indexStut, string taid)
        {
            var midParameter = mid != null ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(string));
    
            var appidParameter = appid != null ?
                new ObjectParameter("appid", appid) :
                new ObjectParameter("appid", typeof(string));
    
            var cuidParameter = cuid != null ?
                new ObjectParameter("cuid", cuid) :
                new ObjectParameter("cuid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var moneyParameter = money != null ?
                new ObjectParameter("money", money) :
                new ObjectParameter("money", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(string));
    
            var sumParameter = sum != null ?
                new ObjectParameter("Sum", sum) :
                new ObjectParameter("Sum", typeof(string));
    
            var indexStutParameter = indexStut.HasValue ?
                new ObjectParameter("indexStut", indexStut) :
                new ObjectParameter("indexStut", typeof(int));
    
            var taidParameter = taid != null ?
                new ObjectParameter("taid", taid) :
                new ObjectParameter("taid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpMaterialDefaultStu", midParameter, appidParameter, cuidParameter, typeParameter, moneyParameter, createByParameter, priceParameter, sumParameter, indexStutParameter, taidParameter);
        }
    
        public virtual ObjectResult<UserName_Result> UserName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserName_Result>("UserName");
        }
    
        public virtual ObjectResult<Vague_Material_Result> Vague_Material(string projectName, string partNumber, string partSpec, string createdBy)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var partSpecParameter = partSpec != null ?
                new ObjectParameter("PartSpec", partSpec) :
                new ObjectParameter("PartSpec", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vague_Material_Result>("Vague_Material", projectNameParameter, partNumberParameter, partSpecParameter, createdByParameter);
        }
    
        public virtual int WHNamebatch(string wHName, Nullable<int> wHArea, Nullable<int> wHStorage, Nullable<int> wHGoodsAl, string createdBy)
        {
            var wHNameParameter = wHName != null ?
                new ObjectParameter("WHName", wHName) :
                new ObjectParameter("WHName", typeof(string));
    
            var wHAreaParameter = wHArea.HasValue ?
                new ObjectParameter("WHArea", wHArea) :
                new ObjectParameter("WHArea", typeof(int));
    
            var wHStorageParameter = wHStorage.HasValue ?
                new ObjectParameter("WHStorage", wHStorage) :
                new ObjectParameter("WHStorage", typeof(int));
    
            var wHGoodsAlParameter = wHGoodsAl.HasValue ?
                new ObjectParameter("WHGoodsAl", wHGoodsAl) :
                new ObjectParameter("WHGoodsAl", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WHNamebatch", wHNameParameter, wHAreaParameter, wHStorageParameter, wHGoodsAlParameter, createdByParameter);
        }
    
        public virtual ObjectResult<WHNameMAX_Result> WHNameMAX(string wHName)
        {
            var wHNameParameter = wHName != null ?
                new ObjectParameter("WHName", wHName) :
                new ObjectParameter("WHName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WHNameMAX_Result>("WHNameMAX", wHNameParameter);
        }
    
        public virtual ObjectResult<WOCheck_Result> WOCheck(string customerName, string contractNumber, string workorderNO, string createTime, string createTimeTo)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            var createTimeParameter = createTime != null ?
                new ObjectParameter("CreateTime", createTime) :
                new ObjectParameter("CreateTime", typeof(string));
    
            var createTimeToParameter = createTimeTo != null ?
                new ObjectParameter("CreateTimeTo", createTimeTo) :
                new ObjectParameter("CreateTimeTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WOCheck_Result>("WOCheck", customerNameParameter, contractNumberParameter, workorderNOParameter, createTimeParameter, createTimeToParameter);
        }
    
        public virtual ObjectResult<WOdetail_Result> WOdetail(string workorderNO)
        {
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WOdetail_Result>("WOdetail", workorderNOParameter);
        }
    
        public virtual ObjectResult<WOdetail_byStation_Result> WOdetail_byStation(string stationType, string workorderNO)
        {
            var stationTypeParameter = stationType != null ?
                new ObjectParameter("StationType", stationType) :
                new ObjectParameter("StationType", typeof(string));
    
            var workorderNOParameter = workorderNO != null ?
                new ObjectParameter("WorkorderNO", workorderNO) :
                new ObjectParameter("WorkorderNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WOdetail_byStation_Result>("WOdetail_byStation", stationTypeParameter, workorderNOParameter);
        }
    }
}
